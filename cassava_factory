library(ggplot2)
library(plyr)
library(dplyr)
library(tidyr)
library(fields)
#-------------
# Thai Cassava farm survey
#setwd("D:/OneDrive - CGIAR/Documents")
#df <- read.csv("Cassava work/tran12-survey-95farmers-cassava-Korat.csv", stringsAsFactors = F)
df <- read.csv("tran12-survey-95farmers-cassava-Korat.csv", stringsAsFactors = F)
colnames(df)[1] <- "x"
df <- df[-c(1:2), -c(ncol(df), (ncol(df) - 1))]
colnames(df)[2:ncol(df)] <- df[2, 2:ncol(df)]
df <- df[-c(1:2), ]
colnames(df)[1] <- "Ampoer"
colnames(df)[8] <- paste("Land Prep", colnames(df)[8])
colnames(df)[15] <- paste("Harvest", colnames(df)[15])
df_supplement <- df[97:144, ]
df <- df[-c(96:nrow(df)), ]
df[, -1] <- as.data.frame(apply(df[, -1], 2, as.numeric))
#--
#df$`Farm size (ha)` <- df$`Farm size (rai)` / 6.25
df$`Farm size (ha)` <- df$`Surface occupied by cassava (rai)` / 6.25
df$`l(Farm size (ha))` <- log(df$`Farm size (ha)`)
hist(df$`Farm size (ha)`)
hist(df$`l(Farm size (ha))`)
m_lfsize <- mean(df$`l(Farm size (ha))`)
s_lfsize <- sd(df$`l(Farm size (ha))`)
cv_lfsize <- s_lfsize / m_lfsize
s2_lfsize <- s_lfsize^2
mu_fsize <- exp(m_lfsize + 1 / 2 * s2_lfsize)
mu_fsize_sample <- mean(df$`Farm size (ha)`, na.rm = T)
mode_fsize <- exp(m_lfsize - s2_lfsize)
#--
df$`Yield (ton/ha)` <- df$`Yield (ton/rai) 1 ha = 6.25 rai` * 6.25
df$`l(Yield (ton/ha))` <- log(df$`Yield (ton/ha)`)
hist(df$`Yield (ton/ha)`)
hist(df$`l(Yield (ton/ha))`)
m_lyield <- mean(df$`l(Yield (ton/ha))`)
s_lyield <- sd(df$`l(Yield (ton/ha))`)
cv_lyield <- s_lyield / m_lyield
s2_lyield <- s_lyield^2
mu_yield <- exp(m_lyield + 1 / 2 * s2_lyield)
mu_yield_sample <- mean(df$`Yield (ton/ha)`, na.rm = T)
sig_yield_sample <- sd(df$`Yield (ton/ha)`, na.rm = T)
mode_yield <- exp(m_lyield - s2_lyield)
cv_yield_sample <- sig_yield_sample / mu_yield_sample
#--
# df$`pct. cass cult` <- df$`Surface occupied by cassava (rai)` / df$`Farm size (rai)`
# hist(df$`pct. cass cult`)
# gg <- ggplot(df, aes(x = `Yield (ton/rai) 1 ha = 6.25 rai`,
#                      y = `Surface occupied by cassava (rai)`))
# gg <- gg + geom_point()
# gg
# cor(df$`Surface occupied by cassava (rai)`, df$`Yield (ton/rai) 1 ha = 6.25 rai`)
# 
# df$`Surface occupied by cassava (rai)`
# hist(df$`N (kg/rai)`)
# hist(df$`P (kg/rai)`)
# hist(df$`K (kg/rai)`)
# hist(df$`Chicken manure (ton/rai)`)
# length(which(df$`Chicken manure (ton/rai)` > 0))
# nrow(df)
# median(df$`Chicken manure (ton/rai)`)
#-------------
# sum(df$`Surface occupied by cassava (rai)`) / sum(df$`Farm size (rai)`)
# df$`Surface occupied by cassava (ha)` <- df$`Surface occupied by cassava (rai)` / 6.25
# sum(df$`Surface occupied by cassava (ha)`)
# sum(df$`Farm size (ha)`)
#-------------
# Deduce number of producers (factory suppliers) from above info
# N_root_statQuo <- Q_root_MT_day_statQuo / (mu_yield * mu_fsize)#(mode_yield * mode_fsize)
#====================================
# Supply function
Q_supply <- function(P, N0, m_A, s2_A, yCeil, mu_Cq, cv_Cq,
                     P_alt = 0, pctChng_costPerOutput = 0, l_credit = 0,
                     plot_particip = F){
  if(P_alt != 0){oppCost <- T}else{oppCost <- F}
  #--
  r_Lmax <- 0
  mu_r <- mu_Cq / P
  #--
  sig2_r <- (mu_r * cv_Cq)^2
  s2_yStar_implied <- sig2_r
  m_yStar_implied <- log(yCeil) - mu_r
  mu_yStar_implied <- exp(m_yStar_implied + s2_yStar_implied / 2)
  mu_A <- exp(m_A + s2_A / 2)
  #--
  s2_qStar <- s2_A + s2_yStar_implied
  s_qStar <- sqrt(s2_qStar)
  #--
  v_rLmax <- (r_Lmax - mu_r + s2_qStar) / s_qStar
  Nv_rLmax <- pnorm(v_rLmax)
  #--
  if(oppCost == F){
    r_L0 <- 1
    v_rL0 <- (r_L0 - mu_r + s2_qStar) / s_qStar
    Nv_rL0 <- pnorm(v_rL0)
    mkt_participation <- 1 - Nv_rL0 + Nv_rLmax
    QS <- N0 * mu_A * mu_yStar_implied / s_qStar * mkt_participation
    df_out <- data.frame(QS, P, mkt_participation, Nv_rL0, Nv_rLmax, mu_yStar_implied)
    #------------------
    if(plot_particip == T){
      #------------------
      # Participation plot
      xlims <- c(-3, 3)
      x <- seq(xlims[1], xlims[2], 0.01)
      df_x <- data.frame(x = x, y = dnorm(x))
      df_x <- df_x %>% mutate(area = ifelse(x >= v_rLmax & x < v_rL0,
                                            "Participating", "Not Participating"))
      p1 <- ggplot(data = df_x, aes(x = x, ymin = 0, ymax = y))
      p1 <- p1 + geom_ribbon(aes(fill = factor("Not participating")))
      p1 <- p1 + geom_ribbon(data = df_x[df_x$area == "Participating", ], aes(fill = area))
      p1 <- p1 + theme(legend.title = element_blank())
      #p1 <- p1 + theme(legend.position = "none")
      p1
      print(p1)
      #------------------
      #Yield participation plot
      s_yStar_implied <- sqrt(s2_yStar_implied)
      y <- seq(0, yCeil, 0.1)
      df_y <- data.frame(y = y, f = dlnorm(y, meanlog = m_yStar_implied,
                                           sdlog = s_yStar_implied))
      yStar_min <- yCeil * exp(-r_L0)
      yStar_max <- yCeil * exp(-0)
      df_y <- df_y %>% mutate(area = ifelse(y >= yStar_min & y < yStar_max,
                                            "Participating", "Not Participating"))
      gg <- ggplot(data = df_y, aes(x = y, ymin = 0, ymax = f))
      gg <- gg + geom_ribbon(aes(fill = factor("Not participating")))
      gg <- gg + geom_ribbon(data = df_y[df_y$area == "Participating", ], aes(fill = area))
      gg <- gg + theme(legend.title = element_blank())
      gg
      print(gg)
    }
    #------------------  
  }else{
    r_L0_base <- 1
    v_rL0_base <- (r_L0_base - mu_r + s2_qStar) / s_qStar
    Nv_rL0_base <- pnorm(v_rL0_base)
    Nv_rLmax_base <- Nv_rLmax
    mkt_participation_base <- 1 - Nv_rL0_base + Nv_rLmax_base
    #--
    pctChng <- pctChng_costPerOutput
    #--
    r_L0_stay <- (1 - P_alt / P) / (1 - pctChng)
    v_rL0_stay <- (r_L0 - mu_r + s2_qStar) / s_qStar
    Nv_rL0_stay <- pnorm(v_rL0)
    Nv_rLmax_stay <- Nv_rLmax
    mkt_participation_stay <- 1 - Nv_rL0_stay + Nv_rLmax_stay
    QS_stay <- N0 * mu_A * mu_yStar_implied / s_qStar * mkt_participation_stay
    #--
    mu_Cq_alt <- mu_Cq * pctChng
    mu_r_alt <- mu_Cq_alt / P_alt
    #--
    sig2_r_alt <- (mu_r_alt * cv_Cq)^2
    s2_yStar_implied_alt <- sig2_r_alt
    s2_qStar_alt <- s2_A + s2_yStar_implied_alt
    s_qStar_alt <- sqrt(s2_qStar_alt)
    m_yStar_implied_alt <- log(yCeil) - mu_r_alt
    mu_yStar_implied_alt <- exp(m_yStar_implied_alt + s2_yStar_implied_alt / 2)
    r_L0_alt <- (1 - P / P_alt) / (1 - 1 / pctChng)
    r_L0_alt_base <- 1
    v_rL0_alt <- (r_L0_alt - mu_r_alt + s2_qStar_alt) / s_qStar_alt
    v_rL0_alt_base <- (r_L0_alt_base - mu_r_alt + s2_qStar_alt) / s_qStar_alt
    r_Lmax_alt <- r_Lmax
    v_rLmax_alt <- (r_Lmax_alt - mu_r_alt + s2_qStar_alt) / s_qStar_alt
    Nv_rL0_alt <- pnorm(v_rL0_alt)
    Nv_rLmax_alt <- pnorm(v_rLmax_alt)
    mkt_participation_alt <- 1 - Nv_rL0_alt + Nv_rLmax_alt
    QS_alt <- N0 * mu_A * mu_yStar_implied_alt / s_qStar_alt * mkt_participation_alt
    #------------------
    mkt_participation_stay
    mkt_participation_alt
    mkt_participation_stay + mkt_participation_alt
    #------------------
    df_out <- data.frame(QS_stay, QS_alt,
                         P, P_alt,
                         mkt_participation_stay, mkt_participation_alt,
                         mu_yStar_implied, mu_yStar_implied_alt)
    #------------------
    if(plot_particip == T){
      #------------------
      # Participation plot
      xlims <- c(-3, 3)
      x <- seq(xlims[1], xlims[2], 0.01)
      df_x <- data.frame(x = x, y = dnorm(x))
      df_x <- df_x %>% mutate(area = ifelse(x >= v_rLmax & x < v_rL0,
                                            "Participating", "Not Participating"))
      df_x <- df_x %>% mutate(area = ifelse(x >= v_rL0 & x < v_rL0_base, 
                                            "Switch", area))
      p1 <- ggplot(data = df_x, aes(x = x, ymin = 0, ymax = y))
      p1 <- p1 + geom_ribbon(aes(fill = factor("Not participating")))
      p1 <- p1 + geom_ribbon(data = df_x[df_x$area == "Participating", ], aes(fill = area))
      p1 <- p1 + geom_ribbon(data = df_x[df_x$area == "Switch", ], aes(fill = area))
      p1 <- p1 + theme(legend.title = element_blank())
      #p1 <- p1 + theme(legend.position = "none")
      p1
      print(p1)
      #------------------
      df_x <- df_x %>% mutate(area = ifelse(x >= v_rLmax_alt & x < v_rL0_alt,
                                            "Participating", "Not Participating"))
      xmin <- min(v_rL0_alt, v_rL0_alt_base)
      xmax <- max(v_rL0_alt, v_rL0_alt_base)
      df_x <- df_x %>% mutate(area = ifelse(x >= xmin & x < xmax, 
                                            "Stay", area))
      p2 <- ggplot(data = df_x, aes(x = x, ymin = 0, ymax = y))
      p2 <- p2 + geom_ribbon(aes(fill = factor("Not participating")))
      p2 <- p2 + geom_ribbon(data = df_x[df_x$area == "Participating", ], aes(fill = area))
      p2 <- p2 + geom_ribbon(data = df_x[df_x$area == "Stay", ], aes(fill = area))
      p2 <- p2 + theme(legend.title = element_blank())
      #p2 <- p2 + theme(legend.position = "none")
      p2
      print(p2)
      
      #------------------
      #Yield participation plot
      s_yStar_implied <- sqrt(s2_yStar_implied)
      y <- seq(0, yCeil, 0.1)
      df_y <- data.frame(y = y, f = dlnorm(y, meanlog = m_yStar_implied,
                                           sdlog = s_yStar_implied))
      yStar_min <- yCeil * exp(-r_L0)
      yStar_max <- yCeil * exp(-0)
      df_y <- df_y %>% mutate(area = ifelse(y >= yStar_min & y < yStar_max,
                                            "Participating", "Not Participating"))
      yStar_min_base <- yCeil * exp(-r_L0_base)
      df_y <- df_y %>% mutate(area = ifelse(y >= yStar_min_base & y < yStar_min,
                                            "Switch", area))
      gg <- ggplot(data = df_y, aes(x = y, ymin = 0, ymax = f))
      gg <- gg + geom_ribbon(aes(fill = factor("Not participating")))
      gg <- gg + geom_ribbon(data = df_y[df_y$area == "Participating", ], aes(fill = area))
      gg <- gg + geom_ribbon(data = df_y[df_y$area == "Switch", ], aes(fill = area))
      gg <- gg + theme(legend.title = element_blank())
      gg
      print(gg)
    }
    #------------------
  }
  return(df_out)
}

#============================
QD_NR_factory_star <- function(P_output_lcu_Qoutput, P_feedstock_lcu_Q,
                               fdstkToOutput_efficiency, beta, mu_Cq, cv_Cq, fixed_cost = NULL){
  sig2_Cq <- (mu_Cq * cv_Cq)^2
  eta_QP <- mu_Cq / P_feedstock_lcu_Q - sig2_Cq / P_feedstock_lcu_Q^2
  term <- (P_output_lcu_Qoutput / fdstkToOutput_efficiency - P_feedstock_lcu_Q * (1 + 1 / eta_QP))
  QD_star <- (term / (beta + 1))^(1 / beta)
  if(is.null(fixed_cost) == FALSE){
    C_fdstk <- QD_star * P_feedstock_lcu_Q
    C_process <- QD_star^(1 + beta)
    NR_star <- C_fdstk / eta_QP + beta * QD_star^(1 + beta) - fixed_cost
    df_out <- data.frame(QD_star, P = P_feedstock_lcu_Q, NR_star)
  }else{
    df_out <- data.frame(QD_star, P = P_feedstock_lcu_Q)
  }
  return(df_out)
}
#======================================
# Farm population parameters
#--Area
mu_A_statQuo <- mu_fsize
m_A_statQuo <- m_lfsize
cv_lA_statQuo <- cv_lfsize
s2_A_statQuo <- s2_lfsize
#check
mu_A_statQuo - exp(m_A_statQuo + s2_A_statQuo / 2)
#--Yield
mu_y_statQuo <- mu_yield
m_y_statQuo <- m_lyield
s2_y_statQuo <- s2_lyield
cv_ly_statQuo <- cv_lyield
#check
mu_y_statQuo - exp(m_y_statQuo + s2_y_statQuo / 2)
mu_y_statQuo
#--Yield ceiling surmise
q <- quantile(df$`Yield (ton/ha)`, probs = 0.98)
ind <- which(df$`Yield (ton/ha)` > q)
#View(df[ind, ])
yCeil_statQuo <- 1.05 * as.numeric(q)
yCeil_statQuo
#--Derived cost per unit output
#-------------------------------------
P_equilib_statQuo <- 2500
P <- 2500
l_credit_statQuo <- 0
#-------------------------------------
N0_statQuo <- 20
#-------------------------------------
mu_Cq_statQuo <- P_equilib_statQuo * (log(yCeil_statQuo) - m_y_statQuo)
mu_Cq_statQuo
cv_Cq_statQuo <- 0.2
sig2_Cq_statQuo <- mu_Cq_statQuo^2 * cv_Cq_statQuo^2
Cq <- P * (log(yCeil_statQuo) - df$`l(Yield (ton/ha))`)
mu_Cq_bar_statQuo <- 1.2 * mu_Cq_statQuo
mu_C_bar_statQuo <- mu_Cq_bar_statQuo * mu_A_statQuo * yCeil_statQuo * exp(-mu_Cq_bar_statQuo / P)
mu_C_bar_statQuo
mu_awSqtInprod_statQuo <- sqrt(mu_C_bar_statQuo * mu_Cq_bar_statQuo / P * (1 - l_credit_statQuo))
mu_C_transition_statQuo <- 0
#-------------------------------------

#=====================================
P <- P_equilib_statQuo
N0 <- N0_statQuo
m_A <- m_A_statQuo
s2_A <- s2_A_statQuo
yCeil <- yCeil_statQuo
mu_Cq <- mu_Cq_statQuo
cv_Cq <- cv_Cq_statQuo
P_alt <- P * 0.8
pctChng_costPerOutput <- .95
l_credit <- 0
plot_particip <- T
#--
#=====================================

P0 <- P
r0 <- seq(-3, 3, 0.1)
Cq0 <- P0 * r0
Cq1 <- Cq0 * pctChng_costPerOutput
P1 <- P0 * 0.85
r1 <- Cq1 / P1
g0 <- exp(-r0) * P0 * (1 - r0)
g1 <- exp(-r1) * P1 * (1 - r1)
d <- g1 - g0




mu_r <- mu_Cq / P
sig_r <- cv_Cq * mu_r
mu_Cq_alt <- mu_Cq * pctChng_costPerOutput
mu_r_alt <- mu_Cq_alt / P_alt
sig_r_alt <- sig_r
f0 <- exp(-r)
  (x - mu_r) / sig_r
ly1 <- (x - mu_r_alt) / sig_r_alt
ly_diff <- ly1 - ly0
f <- dnorm(ly_diff)


f0 <- dnorm((x - mu_r) / sig_r)
f1 <- dnorm((x - mu_r_alt) / sig_r_alt)





if(P_alt != 0){oppCost <- T}else{oppCost <- F}
#--
r_Lmax <- 0
mu_r <- mu_Cq / P
#--
sig2_r <- (mu_r * cv_Cq)^2
s2_yStar_implied <- sig2_r
m_yStar_implied <- log(yCeil) - mu_r
mu_yStar_implied <- exp(m_yStar_implied + s2_yStar_implied / 2)
mu_A <- exp(m_A + s2_A / 2)
#--
s2_qStar <- s2_A + s2_yStar_implied
s_qStar <- sqrt(s2_qStar)
#--
v_rLmax <- (r_Lmax - mu_r + s2_qStar) / s_qStar
Nv_rLmax <- pnorm(v_rLmax)
#--
if(oppCost == F){
  r_L0 <- 1
  v_rL0 <- (r_L0 - mu_r + s2_qStar) / s_qStar
  Nv_rL0 <- pnorm(v_rL0)
  mkt_participation <- 1 - Nv_rL0 + Nv_rLmax
  QS <- N0 * mu_A * mu_yStar_implied / s_qStar * mkt_participation
  df_out <- data.frame(QS, P, mkt_participation, Nv_rL0, Nv_rLmax, mu_yStar_implied)
  #------------------
  if(plot_particip == T){
    #------------------
    # Participation plot
    xlims <- c(-3, 3)
    x <- seq(xlims[1], xlims[2], 0.01)
    df_x <- data.frame(x = x, y = dnorm(x))
    df_x <- df_x %>% mutate(area = ifelse(x >= v_rLmax & x < v_rL0,
                                          "Participating", "Not Participating"))
    p1 <- ggplot(data = df_x, aes(x = x, ymin = 0, ymax = y))
    p1 <- p1 + geom_ribbon(aes(fill = factor("Not participating")))
    p1 <- p1 + geom_ribbon(data = df_x[df_x$area == "Participating", ], aes(fill = area))
    p1 <- p1 + theme(legend.title = element_blank())
    #p1 <- p1 + theme(legend.position = "none")
    p1
    print(p1)
    #------------------
    #Yield participation plot
    s_yStar_implied <- sqrt(s2_yStar_implied)
    y <- seq(0, yCeil, 0.1)
    df_y <- data.frame(y = y, f = dlnorm(y, meanlog = m_yStar_implied,
                                         sdlog = s_yStar_implied))
    yStar_min <- yCeil * exp(-r_L0)
    yStar_max <- yCeil * exp(-0)
    df_y <- df_y %>% mutate(area = ifelse(y >= yStar_min & y < yStar_max,
                                          "Participating", "Not Participating"))
    gg <- ggplot(data = df_y, aes(x = y, ymin = 0, ymax = f))
    gg <- gg + geom_ribbon(aes(fill = factor("Not participating")))
    gg <- gg + geom_ribbon(data = df_y[df_y$area == "Participating", ], aes(fill = area))
    gg <- gg + theme(legend.title = element_blank())
    gg
    print(gg)
  }
  #------------------  
}else{
  r_L0_base <- 1
  v_rL0_base <- (r_L0_base - mu_r + s2_qStar) / s_qStar
  Nv_rL0_base <- pnorm(v_rL0_base)
  Nv_rLmax_base <- Nv_rLmax
  mkt_participation_base <- 1 - Nv_rL0_base + Nv_rLmax_base
  #--
  pctChng <- pctChng_costPerOutput
  #--
  r_L0_stay <- (1 - P_alt / P) / (1 - pctChng)
  v_rL0_stay <- (r_L0 - mu_r + s2_qStar) / s_qStar
  Nv_rL0_stay <- pnorm(v_rL0)
  Nv_rLmax_stay <- Nv_rLmax
  mkt_participation_stay <- 1 - Nv_rL0_stay + Nv_rLmax_stay
  QS_stay <- N0 * mu_A * mu_yStar_implied / s_qStar * mkt_participation_stay
  #--
  mu_Cq_alt <- mu_Cq * pctChng
  mu_r_alt <- mu_Cq_alt / P_alt
  #--
  sig2_r_alt <- (mu_r_alt * cv_Cq)^2
  s2_yStar_implied_alt <- sig2_r_alt
  s2_qStar_alt <- s2_A + s2_yStar_implied_alt
  s_qStar_alt <- sqrt(s2_qStar_alt)
  m_yStar_implied_alt <- log(yCeil) - mu_r_alt
  mu_yStar_implied_alt <- exp(m_yStar_implied_alt + s2_yStar_implied_alt / 2)
  r_L0_alt <- (1 - P / P_alt) / (1 - 1 / pctChng)
  r_L0_alt_base <- 1
  v_rL0_alt <- (r_L0_alt - mu_r_alt + s2_qStar_alt) / s_qStar_alt
  v_rL0_alt_base <- (r_L0_alt_base - mu_r_alt + s2_qStar_alt) / s_qStar_alt
  r_Lmax_alt <- r_Lmax
  v_rLmax_alt <- (r_Lmax_alt - mu_r_alt + s2_qStar_alt) / s_qStar_alt
  Nv_rL0_alt <- pnorm(v_rL0_alt)
  Nv_rLmax_alt <- pnorm(v_rLmax_alt)
  mkt_participation_alt <- 1 - Nv_rL0_alt + Nv_rLmax_alt
  QS_alt <- N0 * mu_A * mu_yStar_implied_alt / s_qStar_alt * mkt_participation_alt
  #------------------
  mkt_participation_stay
  mkt_participation_alt
  mkt_participation_stay + mkt_participation_alt
  #------------------
  df_out <- data.frame(QS_stay, QS_alt,
                       P, P_alt,
                       mkt_participation_stay, mkt_participation_alt,
                       mu_yStar_implied, mu_yStar_implied_alt)
  #------------------
  if(plot_particip == T){
    #------------------
    # Participation plot
    xlims <- c(-3, 3)
    x <- seq(xlims[1], xlims[2], 0.01)
    df_x <- data.frame(x = x, y = dnorm(x))
    df_x <- df_x %>% mutate(area = ifelse(x >= v_rLmax & x < v_rL0,
                                          "Participating", "Not Participating"))
    df_x <- df_x %>% mutate(area = ifelse(x >= v_rL0 & x < v_rL0_base, 
                                          "Switch", area))
    p1 <- ggplot(data = df_x, aes(x = x, ymin = 0, ymax = y))
    p1 <- p1 + geom_ribbon(aes(fill = factor("Not participating")))
    p1 <- p1 + geom_ribbon(data = df_x[df_x$area == "Participating", ], aes(fill = area))
    p1 <- p1 + geom_ribbon(data = df_x[df_x$area == "Switch", ], aes(fill = area))
    p1 <- p1 + theme(legend.title = element_blank())
    #p1 <- p1 + theme(legend.position = "none")
    p1
    print(p1)
    #------------------
    df_x <- df_x %>% mutate(area = ifelse(x >= v_rLmax_alt & x < v_rL0_alt,
                                          "Participating", "Not Participating"))
    xmin <- min(v_rL0_alt, v_rL0_alt_base)
    xmax <- max(v_rL0_alt, v_rL0_alt_base)
    df_x <- df_x %>% mutate(area = ifelse(x >= xmin & x < xmax, 
                                          "Stay", area))
    p2 <- ggplot(data = df_x, aes(x = x, ymin = 0, ymax = y))
    p2 <- p2 + geom_ribbon(aes(fill = factor("Not participating")))
    p2 <- p2 + geom_ribbon(data = df_x[df_x$area == "Participating", ], aes(fill = area))
    p2 <- p2 + geom_ribbon(data = df_x[df_x$area == "Stay", ], aes(fill = area))
    p2 <- p2 + theme(legend.title = element_blank())
    #p2 <- p2 + theme(legend.position = "none")
    p2
    print(p2)
    
    #------------------
    #Yield participation plot
    s_yStar_implied <- sqrt(s2_yStar_implied)
    y <- seq(0, yCeil, 0.1)
    df_y <- data.frame(y = y, f = dlnorm(y, meanlog = m_yStar_implied,
                                         sdlog = s_yStar_implied))
    yStar_min <- yCeil * exp(-r_L0)
    yStar_max <- yCeil * exp(-0)
    df_y <- df_y %>% mutate(area = ifelse(y >= yStar_min & y < yStar_max,
                                          "Participating", "Not Participating"))
    yStar_min_base <- yCeil * exp(-r_L0_base)
    df_y <- df_y %>% mutate(area = ifelse(y >= yStar_min_base & y < yStar_min,
                                          "Switch", area))
    gg <- ggplot(data = df_y, aes(x = y, ymin = 0, ymax = f))
    gg <- gg + geom_ribbon(aes(fill = factor("Not participating")))
    gg <- gg + geom_ribbon(data = df_y[df_y$area == "Participating", ], aes(fill = area))
    gg <- gg + geom_ribbon(data = df_y[df_y$area == "Switch", ], aes(fill = area))
    gg <- gg + theme(legend.title = element_blank())
    gg
    print(gg)
  }
  #------------------
}
#--





x <- seq(0, 43, 0.1)
x_min <- 16
x_max <- 22
df <- data.frame(x = x, f = dlnorm(x, meanlog = 2.5,
                                   sdlog = 0.24))
df <- df %>% mutate(area = ifelse(x >= x_min & x < x_max,
                                  "Participating", "Not Participating"))
gg <- ggplot(data = df, aes(x = x, ymin = 0, ymax = f, fill = area))
gg <- gg + geom_ribbon()
gg <- gg + theme(legend.title = element_blank())
gg











































Pvec <- seq(100, 10000, 50)
cv_Cq_vec <- c(0.1, 0.5, 0.7, 0.9)
last_i <- length(cv_Cq_vec)
Qvec_list <- list()
for(i in 1:last_i){
  this_cv <- cv_Cq_vec[i]
  df_Q <- Q_supply(P = Pvec,
                   N0 = N0_statQuo,
                   m_A = m_A_statQuo,
                   s2_A = s2_A_statQuo,
                   yCeil = yCeil_statQuo,
                   mu_Cq = mu_Cq_statQuo,
                   cv_Cq = this_cv,
                   P_alt = 0,
                   pctChng_costPerOutput = 0,
                   l_credit = l_credit_statQuo,
                   plot_particip = F)
  Qvec_list[[i]] <- df_Q$Q
}
df <- as.data.frame(do.call(cbind, Qvec_list))
colnames(df) <- as.character(cv_Cq_vec)
gathercols <- colnames(df)
df$P <- Pvec
df <- df %>% gather_("Coefficient \nof variation (r)", "Q", gathercols)
#------------
df_plot <- df
gg <- ggplot(df_plot, aes(x = P, y = Q,
                          group = `Coefficient \nof variation (r)`,
                          color = `Coefficient \nof variation (r)`)) + geom_point()
gg <- gg + coord_cartesian(ylim = c(0, 5000))
gg <- gg + xlab("Price (lcu/MT)") + ylab("Quantity (MT)")
gg





Pvec <- seq(100, 10000, 100)
mu_r_vec <- c(0.5, 1, 1.5)
last_i <- length(mu_r_vec)
Qvec_list <- list()
Particip_list <- list()
for(i in 1:last_i){
  this_mu_r <- mu_r_vec[i]
  this_mu_Cq <- P * this_mu_r
  df_Q <- Q_supply(P = Pvec,
                   N0 = N0_statQuo,
                   m_A = m_A_statQuo,
                   s2_A = s2_A_statQuo,
                   yCeil = yCeil_statQuo,
                   mu_Cq = this_mu_Cq,
                   cv_Cq = cv_Cq_statQuo,
                   P_alt = 0,
                   pctChng_costPerOutput = 0,
                   l_credit = l_credit_statQuo,
                   plot_particip = F)
  Qvec_list[[i]] <- df_Q$Q
  Particip_list[[i]] <- df_Q$mkt_participation
}
df <- as.data.frame(do.call(cbind, Qvec_list))
df2 <- as.data.frame(do.call(cbind, Particip_list))
colnames(df) <- as.character(mu_r_vec)
colnames(df2) <- as.character(mu_r_vec)
gathercols <- colnames(df)
df$P <- Pvec
df2$P <- Pvec
df_S <- df %>% gather_("Mean cost to\nprice ratio", "Q", gathercols)
df_particip <- df2 %>% gather_("Mean cost to\nprice ratio", "mkt_participation", gathercols)
#------------
df_plot <- df_S
gg <- ggplot(df_plot, aes(x = P, y = Q,
                          group = `Mean cost to\nprice ratio`,
                          color = `Mean cost to\nprice ratio`)) + geom_point()
gg <- gg + coord_cartesian(ylim = c(0, 5000))
gg <- gg + xlab("Price (lcu/MT)") + ylab("Quantity (MT)")
gg

# df_plot <- df_particip
# gg <- ggplot(df_plot, aes(x = P, y = `Mean cost to\nprice ratio`, fill = mkt_participation))
# gg <- gg + geom_area()
# gg

#===============================
Pvec <- seq(100, 10000, 100)
df_Q <- Q_supply(P = Pvec,
                 N0 = N0_statQuo,
                 m_A = m_A_statQuo,
                 s2_A = s2_A_statQuo,
                 yCeil = yCeil_statQuo,
                 mu_Cq = mu_Cq_statQuo,
                 cv_Cq = cv_Cq_statQuo,
                 P_alt = 0,
                 pctChng_costPerOutput = 0,
                 l_credit = l_credit_statQuo)

colnames(df_Q)[1] <- "Quantity\n(MT)"
df_plot <- df_Q
gg <- ggplot(df_plot, aes(x = P, y = mkt_participation, color = `Quantity\n(MT)`)) + geom_point()
gg <- gg + xlab("Price (lcu/MT)") + ylab("Producer Market Participation")
gg

gg <- ggplot(df_plot, aes(x = P, y = Nv_rLmax, color = `Quantity\n(MT)`)) + geom_point()
gg <- gg + xlab("Price (lcu/MT)") #+ ylab("Producer Market Participation")
gg

plot(df_Q$Nv_rL0 - df_Q$Nv_rLmax)

#==========================


Pvec <- seq(100, 10000, 50)
#mu_r_vec <- c(0.5, 1, 1.5)
mu_Cq_vec <- seq(1000, 3000, 1000)
last_i <- length(mu_r_vec)
mktParticip_vec_list <- list()
QS_vec_list <- list()
for(i in 1:last_i){
  #this_mu_r <- mu_r_vec[i]
  #this_mu_Cq <- Pvec * this_mu_r
  this_mu_Cq <- mu_Cq_vec[i]
  df_QS <- Q_supply(P = Pvec,
                    N0 = N0_statQuo,
                    m_A = m_A_statQuo,
                    s2_A = s2_A_statQuo,
                    yCeil = yCeil_statQuo,
                    mu_Cq = this_mu_Cq,
                    cv_Cq = cv_Cq_statQuo,
                    P_alt = 0,
                    pctChng_costPerOutput = 0,
                    l_credit = l_credit_statQuo)
  mktParticip_vec_list[[i]] <- df_QS$mkt_participation
  QS_vec_list[[i]] <- df_QS$Q
}
df_QS <- as.data.frame(do.call(cbind, QS_vec_list))
df_mktPart <- as.data.frame(do.call(cbind, mktParticip_vec_list))
colnames(df_QS) <- as.character(mu_Cq_vec)
colnames(df_mktPart) <- as.character(mu_Cq_vec)
gathercols <- colnames(df_QS)
df_QS$P <- Pvec
df_QS <- df_QS %>% gather_("Mean cost\nof production", "QS", gathercols)
gathercols <- colnames(df_mktPart)
df_mktPart$P <- Pvec
df_mktPart <- df_mktPart %>% gather_("Mean cost\nof production", "Mkt. Participation", gathercols)
df <- merge(df_QS, df_mktPart, by = c("P", "Mean cost\nof production"))
#------------
df_plot <- df
#gg <- ggplot(df_plot, aes(x = QS, y = `Mkt. Participation`))
gg <- ggplot(df_plot, aes(x = P, y = QS,
                          group = `Mean cost\nof production`,
                          color = `Mean cost\nof production`))
gg <- gg + geom_point()
#gg <- gg + coord_cartesian(ylim = c(0, 8000))
#gg <- gg + xlab("Price (lcu/MT)") #+ ylab("Mkt. Participation (%)")
#gg <- gg + facet_wrap(~`Mean cost\nof production`, ncol = 1)
gg


#==========================
s2_A_statQuo
cv_A_vec <- seq(0.05, 2, 0.01)
sig2_A_vec <- exp(m_A_statQuo + (m_A_statQuo * cv_A_vec)^2 / 2) * cv_A_vec^2
sig_A_vec <- sqrt(sig2_A_vec)
#s_A_vec <- seq(-4, 4, 0.01)
s_A_vec <- log(sig_A_vec)
PMPRmax_vec <- 1 - pnorm(s_A_vec + 1 / s_A_vec) + pnorm(s_A_vec)
df_plot <- data.frame(rhoMax = PMPRmax_vec, s_A <- s_A_vec)
gg <- ggplot(df_plot, aes(x = s_A, y = rhoMax)) + geom_line()
gg <- gg + ylab("Maximum Producer Market Participation")
gg <- gg + xlab("Standard Deviation of Logged Farm Size")
gg
#==========================
#======================================
# Factory parameters
Q_chip_MT_statQuo <- 350
#N_chip_statQuo <- Q_chip_MT_statQuo / (convert_root_chip * mode_yield * mode_fsize)
#Q_root_MT_day_statQuo <- 800
Q_root_MT_day_statQuo <- 1100
P_root_lcu_MT_statQuo <- 2500
P_starch_lcu_MT_statQuo <- 14000
P_ethanol_lcu_kL_statQuo <- 18000
MTRootsPerMTStarch_statQuo <- 4.21
Q_ethanol_kL_day_statQuo <- 343.6
MTRootsPerkLEthanol_statQuo <- Q_root_MT_day_statQuo / Q_ethanol_kL_day_statQuo
Q_starch_MT_day_statQuo <- Q_root_MT_day_statQuo / MTRootsPerMTStarch
Cost_rootProcessing_MTroot_statQuo <- 13500 / MTRootsPerMTStarch_statQuo - P_root_lcu_MT_statQuo
#Cost_rootProcessing_MTstarch_statQuo <- MTRootsPerMTStarch_statQuo * Cost_rootProcessing_MTroot_statQuo
Cost_processing_day_statQuo <- Q_feedstock_MT_day_statQuo * Cost_rootProcessing_MTroot_statQuo
#beta_statQuo <- 0.97
#alpha_statQuo <- exp(log(Cost_rootProcessing_MTroot_statQuo) - beta_statQuo * log(Q_feedstock_MT_day_statQuo))
# alpha_statQuo <- exp(log(Cost_processing_day_statQuo) - beta_statQuo * log(Q_feedstock_MT_day_statQuo))
# alpha_statQuo * Q_root_MT_day_statQuo^beta_statQuo - Cost_processing_day_statQuo
#beta_statQuo <- log(Cost_processing_day_statQuo) / log(Q_feedstock_MT_day_statQuo) - 1
beta_statQuo <- 0.98
#======================================
#fdstkToOutput_efficiency_statQuo <- MTRootsPerMTStarch_statQuo
fdstkToOutput_efficiency_statQuo <- MTRootsPerkLEthanol_statQuo
#--
P_feedstock_lcu_MT_statQuo <- P_root_lcu_MT_statQuo
#P_output_lcu_MToutput_statQuo <- P_starch_lcu_MT_statQuo
P_output_lcu_MToutput_statQuo <- P_ethanol_lcu_kL_statQuo
#--
P_output_lcu_MTfdstk_statQuo <- P_output_lcu_MToutput_statQuo / fdstkToOutput_efficiency_statQuo
#--
Q_feedstock_MT_day_statQuo <- Q_root_MT_day_statQuo
#--
Cost_fdstkProcessing_MTfdstk_statQuo <- Cost_rootProcessing_MTroot_statQuo
#Cost_fdstkProcessing_MToutput_statQuo <- Cost_rootProcessing_MTstarch_statQuo
#--
fixed_cost_statQuo <- 0
#======================================
# Check
# NR <- FactoryNetRevenue(Q_feedstock = Q_feedstock_MT_day_statQuo,
#                         P_output_lcu_Qoutput = P_output_lcu_MToutput_statQuo,
#                         fdstkToOutput_efficiency = fdstkToOutput_efficiency_statQuo,
#                         P_feedstock_lcu_Q = P_feedstock_lcu_MT_statQuo,
#                         beta = beta_statQuo)
# NR
# Q_feedstock_MT_day_statQuo / fdstkToOutput_efficiency_statQuo * (P_starch_lcu_MT_statQuo - 13500)
#Revenue <- Q_feedstock_MT_day_statQuo / fdstkToOutput_efficiency_statQuo * P_output_lcu_MToutput_statQuo
# Revenue <- Q_feedstock_MT_day_statQuo * P_output_lcu_MTfdstk_statQuo
# Cost <- Q_feedstock_MT_day_statQuo * (P_feedstock_lcu_MT_statQuo + Cost_fdstkProcessing_MTfdstk_statQuo)
# NR_day <- Revenue - Cost
#======================================
# QS, QD, equilibrium price/quantity
P_fdstk_vec <- seq(100, 5000, 10)
mu_Cq_vec <- seq(1000, 3000, 500)
last_i <- length(mu_Cq_vec)
mktParticip_vec_list <- list()
QS_vec_list <- list()
QD_vec_list <- list()
P_equilib_vec <- c()
NR_equilib_vec <- c()
Q_equilib_vec <- c()
for(i in 1:last_i){
  this_mu_Cq <- mu_Cq_vec[i]
  df_QS <- Q_supply(P = P_fdstk_vec,
                    N0 = N0_statQuo,
                    m_A = m_A_statQuo,
                    s2_A = s2_A_statQuo,
                    yCeil = yCeil_statQuo,
                    mu_Cq = this_mu_Cq,
                    cv_Cq = cv_Cq_statQuo,
                    P_alt = 0,
                    pctChng_costPerOutput = 0,
                    l_credit = l_credit_statQuo)
  mktParticip_vec <- df_QS$mkt_participation
  QS_vec <- df_QS$QS
  mktParticip_vec_list[[i]] <- mktParticip_vec
  QS_vec_list[[i]] <- QS_vec
  #---------------
  df_QD_NR <- QD_NR_factory_star(P_output_lcu_Qoutput = P_output_lcu_MToutput_statQuo,
                                 P_feedstock_lcu_Q = P_fdstk_vec,
                                 fdstkToOutput_efficiency = fdstkToOutput_efficiency_statQuo,
                                 beta = beta_statQuo,
                                 mu_Cq = this_mu_Cq,
                                 cv_Cq = cv_Cq_statQuo,
                                 fixed_cost = 0)
  QD_vec <- df_QD_NR$QD_star
  NR_star_vec <- df_QD_NR$NR_star
  QD_vec_list[[i]] <- QD_vec
  #---------------
  absDiff <- abs(QD_vec - QS_vec)
  absDiff[is.nan(absDiff)] <- NA
  ind_Equilib <- which(absDiff == min(absDiff, na.rm = TRUE))
  P_equilib <- P_fdstk_vec[ind_Equilib]
  Q_equilib <- QD_vec[ind_Equilib]
  NR_equilib <- NR_star_vec[ind_Equilib]
  P_equilib_vec[i] <- P_equilib
  Q_equilib_vec[i] <- Q_equilib
  NR_equilib_vec[i] <- NR_equilib
}
df_QS <- as.data.frame(do.call(cbind, QS_vec_list))
df_QD <- as.data.frame(do.call(cbind, QD_vec_list))
df_mktPart <- as.data.frame(do.call(cbind, mktParticip_vec_list))
colnames(df_QS) <- as.character(mu_Cq_vec)
colnames(df_QD) <- as.character(mu_Cq_vec)
colnames(df_mktPart) <- as.character(mu_Cq_vec)
gathercols <- colnames(df_QS)
df_QS$P <- P_fdstk_vec
df_QS <- df_QS %>% gather_("Mean production\ncost (lcu/MT)", "QS", gathercols)
gathercols <- colnames(df_QD)
df_QD$P <- P_fdstk_vec
df_QD <- df_QD %>% gather_("Mean production\ncost (lcu/MT)", "QD", gathercols)
gathercols <- colnames(df_mktPart)
df_mktPart$P <- P_fdstk_vec
df_mktPart <- df_mktPart %>% gather_("Mean production\ncost (lcu/MT)", "Mkt. Participation", gathercols)
df_Q_mktPart <- join_all(list(df_QS, df_QD, df_mktPart))
#df_QS_mktPart <- merge(df_QS, df_mktPart, by = c("P", "Mean production\ncost (lcu/MT)"))
#------------
df_Equilib <- data.frame(P_equilib = P_equilib_vec,
                         Q_equilib = Q_equilib_vec,
                         NR_equilib = NR_equilib_vec,
                         mu_Cq = mu_Cq_vec)
#------------
gg <- ggplot()
gg <- gg + geom_line(data = df_Q_mktPart,
                     aes(x = P, y = QS, 
                         group = `Mean production\ncost (lcu/MT)`,
                         color = `Mean production\ncost (lcu/MT)`),
                     size = 2)
gg <- gg + geom_line(data = df_Q_mktPart,
                     aes(x = P, y = QD, 
                         group = `Mean production\ncost (lcu/MT)`,
                         color = `Mean production\ncost (lcu/MT)`),
                     size = 2)
gg <- gg + geom_point(data = df_Equilib, aes(x = P_equilib, y = Q_equilib), size = 3)
#gg <- gg + geom_line(data = df_Equilib, aes(x = P_equilib, y = Q_equilib), color="blue", size = 1.5)
gg <- gg + coord_cartesian(ylim = c(0, 2500), xlim = c(0, 2500))
gg <- gg + xlab("Feedstock price (lcu/MT)")
gg <- gg + ylab("Feedstock supply quantity (MT)")
gg

#======================================
# Heatmap time
#-------------
ind <- 5
mu_Cq_statQuo <- df_Equilib$mu_Cq[ind]
Pe_statQuo_baseTech <- df_Equilib$P_equilib[ind]
#-------------
beta_change_vec <- -seq(0, 0.2, 0.01)
beta_new_vec <- beta_statQuo + beta_change_vec
mu_Cq_change_vec <- seq(0, .5, 0.025)
#-------------
P_fdstk_vec <- seq(10, 7000, 1)
#-------------
n_FactryCostChng <- length(beta_change_vec)
n_FarmCostChng <- length(mu_Cq_change_vec)
P_equilib_mat <- matrix(NA, n_FactryCostChng, n_FarmCostChng)
Q_equilib_mat <- matrix(NA, n_FactryCostChng, n_FarmCostChng)
NR_equilib_mat <- matrix(NA, n_FactryCostChng, n_FarmCostChng)
NR_pctChng_mat <- matrix(NA, n_FactryCostChng, n_FarmCostChng)
FactoryNRday_pctChng_QstatQuo_mat <- matrix(NA, n_FactryCostChng, n_FarmCostChng)
FactoryNRday_pctChng_PstatQuo_mat <- matrix(NA, n_FactryCostChng, n_FarmCostChng)
mktParticip_mat <- matrix(NA, n_FactryCostChng, n_FarmCostChng)
adoptRate_mat <- matrix(NA, n_FactryCostChng, n_FarmCostChng)
last_i <- length(mu_Cq_change_vec)
last_j <- length(beta_change_vec)
df_Equilib_list <- list()
for(j in 1:last_j){
  this_beta <- beta_statQuo + beta_change_vec[j]
  QS_vec_list <- list()
  QD_vec_list <- list()
  mktParticip_vec_list <- list()
  P_equilib_vec <- c()
  Q_equilib_vec <- c()
  NR_equilib_vec <- c()
  for(i in 1:last_i){
    this_pctChng_costPerOutput <- mu_Cq_change_vec[i]
    df_QS <- Q_supply(P = P_fdstk_vec,
                      N0 = N0_statQuo,
                      m_A = m_A_statQuo,
                      s2_A = s2_A_statQuo,
                      yCeil = yCeil_statQuo,
                      mu_Cq = mu_Cq_statQuo,
                      cv_Cq = cv_Cq_statQuo,
                      P_alt = Pe_statQuo_baseTech,
                      pctChng_costPerOutput = this_pctChng_costPerOutput,
                      l_credit = l_credit_statQuo)
    mktParticip_vec <- df_QS$mkt_participation
    QS_vec <- df_QS$QS
    #---------------
    mu_Cq_new <- mu_Cq_statQuo * (1 + this_pctChng_costPerOutput)
    df_QD_NR <- QD_NR_factory_star(P_output_lcu_Qoutput = P_output_lcu_MToutput_statQuo,
                                   P_feedstock_lcu_Q = P_fdstk_vec,
                                   fdstkToOutput_efficiency = fdstkToOutput_efficiency_statQuo,
                                   beta = this_beta,
                                   mu_Cq = mu_Cq_new,
                                   cv_Cq = cv_Cq_statQuo,
                                   fixed_cost = fixed_cost_statQuo)
    QD_vec <- df_QD_NR$QD_star
    NR_star_vec <- df_QD_NR$NR_star
    #---------------
    absDiff <- abs(QD_vec - QS_vec)
    absDiff[is.nan(absDiff)] <- NA
    ind_Equilib <- which(absDiff == min(absDiff, na.rm = TRUE))
    P_equilib <- P_fdstk_vec[ind_Equilib]
    Q_equilib <- QD_vec[ind_Equilib]
    mktParticip_equilib <- mktParticip_vec[ind_Equilib]
    NR_equilib <- NR_star_vec[ind_Equilib]
    #-------
    if(i == 1 & j == 1){
      NRstar_statQuo <- NR_equilib
      mktParticip_statQuo <- mktParticip_equilib
    }
    #-------
    P_equilib_mat[j, i] <- P_equilib
    Q_equilib_mat[j, i] <- Q_equilib
    mktParticip_mat[j, i] <- mktParticip_equilib
    NR_equilib_mat[j, i] <- NR_equilib
    NR_pctChng_mat[j, i] <- 100 * (NR_equilib - NRstar_statQuo) / NRstar_statQuo
    adoptRate_mat[j, i] <- mktParticip_equilib / mktParticip_statQuo
    #-------
    QS_vec_list[[i]] <- QS_vec
    QD_vec_list[[i]] <- QD_vec
    mktParticip_vec_list[[i]] <- mktParticip_vec
    P_equilib_vec[i] <- P_equilib
    Q_equilib_vec[i] <- Q_equilib
    NR_equilib_vec[i] <- NR_equilib
  }
  
  
  # df_QS <- as.data.frame(do.call(cbind, QS_vec_list))
  # df_QD <- as.data.frame(do.call(cbind, QD_vec_list))
  # df_mktPart <- as.data.frame(do.call(cbind, mktParticip_vec_list))
  # colnames(df_QS) <- as.character(mu_Cq_new_vec)
  # colnames(df_QD) <- as.character(mu_Cq_new_vec)
  # colnames(df_mktPart) <- as.character(mu_Cq_new_vec)
  # gathercols <- colnames(df_QS)
  # df_QS$P <- P_fdstk_vec
  # df_QS <- df_QS %>% gather_("Mean production\ncost (lcu/MT)", "QS", gathercols)
  # gathercols <- colnames(df_QD)
  # df_QD$P <- P_fdstk_vec
  # df_QD <- df_QD %>% gather_("Mean production\ncost (lcu/MT)", "QD", gathercols)
  # gathercols <- colnames(df_mktPart)
  # df_mktPart$P <- P_fdstk_vec
  # df_mktPart <- df_mktPart %>% gather_("Mean production\ncost (lcu/MT)", "Mkt. Participation", gathercols)
  # df_Q_mktPart <- join_all(list(df_QS, df_QD, df_mktPart))
  # 
  df_Equilib <- data.frame(P_equilib = P_equilib_vec,
                           Q_equilib = Q_equilib_vec,
                           NR_equilib = NR_equilib_vec,
                           mu_Cq = mu_Cq_statQuo * (1 + mu_Cq_change_vec))
  # #------------
  # gg <- ggplot()
  # gg <- gg + geom_line(data = df_Q_mktPart,
  #                      aes(x = P, y = QS, 
  #                          group = `Mean production\ncost (lcu/MT)`,
  #                          color = `Mean production\ncost (lcu/MT)`),
  #                      size = 2)
  # gg <- gg + geom_line(data = df_Q_mktPart,
  #                      aes(x = P, y = QD, 
  #                          group = `Mean production\ncost (lcu/MT)`,
  #                          color = `Mean production\ncost (lcu/MT)`),
  #                      size = 2)
  # gg <- gg + geom_point(data = df_Equilib, aes(x = P_equilib, y = Q_equilib), size = 3)
  # #gg <- gg + geom_line(data = df_Equilib, aes(x = P_equilib, y = Q_equilib), color="blue", size = 1.5)
  # gg <- gg + coord_cartesian(ylim = c(0, 2500), xlim = c(250, 2500))
  # gg <- gg + xlab("Feedstock price (lcu/MT)")
  # gg <- gg + ylab("Feedstock supply quantity (MT)")
  # gg <- gg + theme(legend.position = "none")
  # gg
  #print("Hello")
  #Sys.sleep(1)
  #------------------
  df_Equilib$`PP reduction\nfactory processing\n cost` <- -beta_change_vec[j] * 100
  df_Equilib_list[[j]] <- df_Equilib
  
}
#-----------------
df_Equilib <- do.call(rbind, df_Equilib_list)
df_Equilib[, 5] <- as.integer(df_Equilib[, 5])
df_plot <- df_Equilib
ind_keep <- which(df_plot[, 5] %% 2 == 0)
df_plot <- df_plot[ind_keep, ]



gg <- ggplot(df_plot, aes(x = P_equilib, y = Q_equilib,
                          # group = `PP reduction\nfactory processing\n cost`,
                          # color = `PP reduction\nfactory processing\n cost`))
                          group = mu_Cq,
                          color = mu_Cq))
gg <- gg + geom_line(size = 2)
gg <- gg + xlab("Equilibrium Price (lcu/MT)") + ylab("Equilibrium Quantity (MT)")
gg <- gg + ggtitle("Equilibrium Supply Curve")
gg




#-----------------
xtick_labs <- -beta_change_vec * 100
ytick_labs <- mu_Cq_change_vec * 100
#-----------------
inMat <- adoptRate_mat
surface <- list(x = xtick_labs,
                y = ytick_labs,
                z = inMat)
plot.surface(surface, type = "C",
             xlab = "Pct Point reduction\nfactory processing cost",
             ylab = "Pct increase\nmean farm cost per unit output", col = cm.colors(25))
title(main = "Adoption Rate", cex.main = 1)
#-----------------
inMat <- NR_pctChng_mat
surface <- list(x = xtick_labs,
                y = ytick_labs,
                z = inMat)
plot.surface(surface, type = "C",
             xlab = "Pct Point reduction\nfactory processing cost",
             ylab = "Pct increase\nmean farm cost per unit output", col = cm.colors(25))
title(main = "Pct Change in Factory Net Revenue", cex.main = 1)

#-----------------
inMat <- P_equilib_mat
surface <- list(x = xtick_labs,
                y = ytick_labs,
                z = inMat)
plot.surface(surface, type = "C",
             xlab = "Pct Point reduction\nfactory processing cost",
             ylab = "Pct increase\nmean farm cost per unit output", col = cm.colors(25))
title(main = "Equilibrium Price (lcu/MT)", cex.main = 1)
#-----------------
inMat <- Q_equilib_mat
surface <- list(x = xtick_labs,
                y = ytick_labs,
                z = inMat)
plot.surface(surface, type = "C",
             xlab = "Pct Point reduction\nfactory processing cost",
             ylab = "Pct increase\nmean farm cost per unit output", col = cm.colors(25))
title(main = "Equilibrium Quantity (MT)", cex.main = 1)
#-----------------
inMat <- 100 * mktParticip_mat
surface <- list(x = xtick_labs,
                y = ytick_labs,
                z = inMat)
plot.surface(surface, type = "C",
             xlab = "Pct Point reduction\nfactory processing cost",
             ylab = "Pct increase\nmean farm cost per unit output", col = cm.colors(25))
title(main = "Percentage of Producers Participating in Market", cex.main = 1)









































#--
qStar_graphMin <- 0
df_plot <- data.frame(qStar = qStar_vec, pdens_qStar)
# gg <- ggplot(df_plot, aes(x = qStar, y = pdens_qStar)) + geom_line()
# gg <- gg + geom_vline(xintercept = qStar_breakEven)
# gg <- gg + coord_cartesian(xlim = c(12, qStar_max))
gg <- ggplot(df_plot, aes(qStar))
gg <- gg + stat_function(fun = dlnorm, 
                         args = list(mean = m_x, sd = s_x),
                         xlim = c(qStar_graphMin, qStar_max),
                         size = 1,
                         color = "gray")
gg <- gg + stat_function(fun = dlnorm, 
                         args = list(mean = m_x, sd = s_x),
                         xlim = c(qStar_breakEven, qStar_max),
                         geom = "area",
                         fill = "blue",
                         alpha = 0.4)
gg <- gg + stat_function(fun = dlnorm, 
                         args = list(mean = m_x, sd = s_x),
                         xlim = c(qStar_graphMin, qStar_breakEven),
                         geom = "area",
                         fill = "orange",
                         alpha = 0.4)
gg <- gg + theme(axis.title = element_blank(),
                 #axis.text = element_blank(),
                 axis.ticks = element_blank(),
                 axis.text.y = element_blank())

gg
