library(ggplot2)
library(rootSolve)
library(plyr)
library(dplyr)
library(tidyr)
library(fields)


plotSurface2 <- function (x, main = NULL, type = "C", zlab = NULL, xlab = NULL, 
                          ylab = NULL, levels = NULL, zlim = NULL, graphics.reset = NULL, 
                          labcex = 0.6, method = "flattest", add.legend = TRUE, ...) 
{
  obj <- x
  old.par <- par(no.readonly = TRUE)
  if (is.na(match(type, c("b", "c", "C", "I", "p")))) {
    stop("plot type does not match b, C, I, or p.")
  }
  if (is.null(zlim)) {
    zlim = range(obj$z, na.rm = TRUE)
  }
  if (is.null(graphics.reset) & (type == "b")) {
    graphics.reset <- TRUE
  }
  else {
    graphics.reset <- FALSE
  }
  if (graphics.reset) {
    on.exit(par(old.par))
  }
  if (is.null(xlab)) {
    if (is.null(obj$xlab)) 
      xlab <- "X"
    else xlab <- obj$xlab
  }
  if (is.null(ylab)) {
    if (is.null(obj$ylab)) 
      ylab <- "Y"
    else ylab <- obj$ylab
  }
  if (is.null(zlab)) {
    if (is.null(obj$zlab)) 
      zlab <- "Z"
    else zlab <- obj$zlab
  }
  if (is.null(main)) 
    if (!is.null(obj$main)) 
      main <- obj$main
  if (type == "b") 
    set.panel(1, 2, TRUE)
  if (type == "p" | type == "b") {
    if (type == "b") {
      add.legend <- FALSE
      old.mar <- par()$mar
      par(mar = c(0, 5, 0, 0))
    }
    drape.plot(obj, xlab = xlab, ylab = ylab, zlab = zlab, 
               zlim = zlim, add.legend = add.legend, ...)
    if (!is.null(main)) 
      title(main)
  }
  if (type == "I") {
    image.plot(obj$x, obj$y, obj$z, xlab = xlab, ylab = ylab, 
               zlim = zlim, ...)
    if ((!is.null(main)) & type != "b") 
      title(main)
  }
  if (type == "c") {
    if (is.null(levels)) 
      levels <- pretty(obj$z[!is.na(obj$z)], 5)
    contour(obj$x, obj$y, obj$z, levels = levels, labcex = labcex, 
            method = method, lwd = 2, ...)
    if ((!is.null(main)) & type != "b") 
      title(main)
  }
  if (type == "b" | type == "C") {
    if (type == "b") {
      par(mar = old.mar)
    }
    image.plot(obj$x, obj$y, obj$z, xlab = xlab, ylab = ylab, 
               graphics.reset = graphics.reset, zlim = zlim, ...)
    if (is.null(levels)) 
      levels <- pretty(obj$z[!is.na(obj$z)], 5)
    contour(obj$x, obj$y, obj$z, add = TRUE, levels = levels, 
            labcex = labcex, method = method, col = "black", lwd = 2)
    if ((!is.null(main)) & type != "b") 
      title(main)
  }
  invisible()
}

#==================================
#==================================
#==================================
#==================================
get_rL0Lmax_01_DEM <- function(P_seq, interval_r = c(0, 1), P0, this_eta_DEM){
  len_P_seq <- length(P_seq)
  r0_Lmax_vec_DEM <- c()
  r0_L0_vec_DEM <- c()
  r1_Lmax_vec_DEM <- c()
  r1_L0_vec_DEM <- c()
  rAdopt_vec_DEM <- c()
  #--
  for(i in 1:len_P_seq){
    this_P <- P_seq[i]
    P1 <- this_P
    # Get r range
    chng_DEM <- 1 + this_eta_DEM
    out_list <- get_r0r1Range_DEM(interval_r, P0, P1, chng_DEM)
    r0_range_DEM <- out_list[[1]]
    r1_range_DEM <- out_list[[2]]
    rAdopt_DEM <- out_list[[3]]
    r0_Lmax_vec_DEM[i] <- r0_range_DEM[1]
    r0_L0_vec_DEM[i] <- r0_range_DEM[2]
    r1_Lmax_vec_DEM[i] <- r1_range_DEM[1]
    r1_L0_vec_DEM[i] <- r1_range_DEM[2]
    rAdopt_vec_DEM[i] <- rAdopt_DEM
  }
  out_df_rL0Lmax01DEM <- data.frame(r0_Lmax_vec_DEM, r0_L0_vec_DEM,
                                    r1_Lmax_vec_DEM, r1_L0_vec_DEM,
                                    rAdopt_vec_DEM)
  # rL0_DEM <- ifelse(Market0, r0_L0_vec_DEM, r1_L0_vec_DEM)
  # rLmax_DEM <- ifelse(Market0, r0_Lmax_vec_DEM, r1_Lmax_vec_DEM)
  return(out_df_rL0Lmax01DEM)
}

#==================================
#==================================

get_rL0Lmax_01_SUP <- function(P_seq, interval_r = c(0, 1), P0, this_eta_SUP){
  len_P_seq <- length(P_seq)
  r0_Lmax_vec_SUP <- c()
  r0_L0_vec_SUP <- c()
  r1_Lmax_vec_SUP <- c()
  r1_L0_vec_SUP <- c()
  rAdopt_vec_SUP <- c()
  #--
  for(i in 1:len_P_seq){
    this_P <- P_seq[i]
    P1 <- this_P
    chng_SUP <- 1 + this_eta_SUP
    out_list <- get_r0r1Range_SUP(interval_r, P0, P1, chng_SUP)
    r0_range_SUP <- out_list[[1]]
    r1_range_SUP <- out_list[[2]]
    rAdopt_SUP <- out_list[[3]]
    r0_Lmax_vec_SUP[i] <- r0_range_SUP[1]
    r0_L0_vec_SUP[i] <- r0_range_SUP[2]
    r1_Lmax_vec_SUP[i] <- r1_range_SUP[1]
    r1_L0_vec_SUP[i] <- r1_range_SUP[2]
    rAdopt_vec_SUP[i] <- rAdopt_SUP
  }
  out_df_rL0Lmax01SUP <- data.frame(r0_Lmax_vec_SUP, r0_L0_vec_SUP,
                                    r1_Lmax_vec_SUP, r1_L0_vec_SUP,
                                    rAdopt_vec_SUP)
  # rL0_SUP <- ifelse(Market0, r0_L0_vec_SUP, r1_L0_vec_SUP)
  # rLmax_SUP <- ifelse(Market0, r0_Lmax_vec_SUP, r1_Lmax_vec_SUP)
  return(out_df_rL0Lmax01SUP)
}

#==================================
#==================================
rootfun <- function(P_seq, N_S, mu_cost_per_farmProduct,
                    cv_cost_per_farmProduct, m_yCeil_farm, s2_yCeil_farm,
                    m_A_farm, s2_A_farm,
                    df_rL0Lmax_SUP = data.frame(rL0 = NULL, rLmax = NULL),
                    this_eta_SUP = NULL,
                    N_D, P_factryProduct, mu_factry_efficiency_inv,
                    cv_factry_efficiency_inv, m_yCeil_factry, s2_yCeil_factry,
                    m_A_factry, s2_A_factry,
                    df_rL0Lmax_DEM = data.frame(rL0 = NULL, rLmax = NULL),
                    this_eta_DEM = NULL,
                    Market0, P_eq_00){
  #---
  if(!(is.null(this_eta_DEM))){
    chng_DEM <- 1 + this_eta_DEM
    mu_factry_efficiency <- 1 / mu_factry_efficiency_inv * chng_DEM
    mu_factry_efficiency_inv <- 1 / mu_factry_efficiency
    sig2_factry_efficiency_inv <- (cv_factry_efficiency_inv * mu_factry_efficiency_inv)^2
    if(is.null(df_rL0Lmax_DEM$rL0)){
      #print("hello1")
      P0 <- P_eq_00
      out_df <- get_rL0Lmax_01_DEM(P_seq, interval_r = c(0, 1), P0, this_eta_DEM)
      #print(out_df[1:10, ])
      test <- rep(Market0, nrow(out_df))
      rL0_DEM <- ifelse(test, out_df$r0_L0_vec_DEM, out_df$r1_L0_vec_DEM)
      rLmax_DEM <- ifelse(test, out_df$r0_Lmax_vec_DEM, out_df$r1_Lmax_vec_DEM)
      df_rL0Lmax_DEM <- data.frame(rL0 = rL0_DEM, rLmax = rLmax_DEM)
      #print(df_rL0Lmax_DEM[1:10, ])
    }
  }else{
    sig2_factry_efficiency_inv <- (cv_factry_efficiency_inv * mu_factry_efficiency_inv)^2
    
  }
  if(!(is.null(this_eta_SUP))){
    chng_SUP <- 1 + this_eta_SUP
    mu_cost_per_farmProduct <- mu_cost_per_farmProduct * chng_SUP
    sig2_cost_per_farmProduct <- (cv_cost_per_farmProduct * mu_cost_per_farmProduct)^2
    if(is.null(df_rL0Lmax_SUP$rL0)){
      #print("hello2")
      P0 <- P_eq_00
      out_df <- get_rL0Lmax_01_SUP(P_seq, interval_r = c(0, 1), P0, this_eta_SUP)
      #print(out_df[1:10, ])
      test <- rep(Market0, nrow(out_df))
      rL0_SUP <- ifelse(test, out_df$r0_L0_vec_SUP, out_df$r1_L0_vec_SUP)
      #print(rL0_SUP)
      rLmax_SUP <- ifelse(test, out_df$r0_Lmax_vec_SUP, out_df$r1_Lmax_vec_SUP)
      df_rL0Lmax_SUP <- data.frame(rL0 = rL0_SUP, rLmax = rLmax_SUP)
      #print(df_rL0Lmax_SUP[1:10, ])
    }
  }else{
    sig2_cost_per_farmProduct <- (cv_cost_per_farmProduct * mu_cost_per_farmProduct)^2    
  }
  #---
  df_QS <- Q_DorS(N = N_S,
                  P_input = 1,
                  P_output = P_seq,
                  mu_beta = mu_cost_per_farmProduct,
                  sig2_beta = sig2_cost_per_farmProduct,
                  m_yCeil = m_yCeil_farm,
                  s2_yCeil = s2_yCeil_farm,
                  m_A = m_A_farm,
                  s2_A = s2_A_farm,
                  df_rL0Lmax_SUP,
                  l_credit = 0)
  colnames(df_QS) <- c("Q", "mkt_particip")
  df_QS$Type <- "Supply"
  df_QS$P_seq <- P_seq
  #---
  df_QD <- Q_DorS(N = N_D,
                  P_input = P_seq,
                  P_output = P_factryProduct,
                  mu_beta = mu_factry_efficiency_inv,
                  sig2_beta = sig2_factry_efficiency_inv,
                  m_yCeil = m_yCeil_factry,
                  s2_yCeil = s2_yCeil_factry,
                  m_A = m_A_factry,
                  s2_A = s2_A_factry,
                  df_rL0Lmax_DEM,
                  l_credit = 0)
  colnames(df_QD) <- c("Q", "mkt_particip")
  df_QD$Type <- "Demand"
  df_QD$P_seq <- P_seq
  #---
  df_QD$Q[which(df_QD$Q == 0)] <- NA
  df_QS$Q[which(df_QS$Q == 0)] <- NA
  d <- df_QS$Q - df_QD$Q
  #---
  # df_plot <- rbind(df_QS, df_QD)
  # gg <- ggplot(df_plot, aes(x = P_seq, y = Q, group = Type, color = Type))
  # gg <- gg + geom_point()
  # print(gg)
  return(d)
}
#==================================
#==================================
get_equilibrium_values <- function(interval_P,
                                   N_S,
                                   mu_cost_per_farmProduct,
                                   cv_cost_per_farmProduct,
                                   m_yCeil_farm,
                                   s2_yCeil_farm,
                                   m_A_farm,
                                   s2_A_farm,
                                   df_rL0Lmax_SUP = data.frame(rL0 = NULL, rLmax = NULL),
                                   this_eta_SUP = NULL,
                                   N_D,
                                   P_factryProduct,
                                   mu_factry_efficiency_inv,
                                   cv_factry_efficiency_inv,
                                   m_yCeil_factry,
                                   s2_yCeil_factry,
                                   m_A_factry,
                                   s2_A_factry,
                                   df_rL0Lmax_DEM = data.frame(rL0 = NULL, rLmax = NULL),
                                   this_eta_DEM = NULL,
                                   Market0, P_eq_00){
  #---
  Pe <- uniroot.all(rootfun, interval_P,
                    lower = min(interval_P), upper = max(interval_P),
                    N_S = N_S,
                    mu_cost_per_farmProduct = mu_cost_per_farmProduct,
                    cv_cost_per_farmProduct = cv_cost_per_farmProduct,
                    m_yCeil_farm = m_yCeil_farm,
                    s2_yCeil_farm = s2_yCeil_farm,
                    m_A_farm = m_A_farm,
                    s2_A_farm = s2_A_farm,
                    df_rL0Lmax_SUP = df_rL0Lmax_SUP,
                    this_eta_SUP = this_eta_SUP,
                    N_D = N_D,
                    P_factryProduct = P_factryProduct,
                    mu_factry_efficiency_inv = mu_factry_efficiency_inv,
                    cv_factry_efficiency_inv = cv_factry_efficiency_inv,
                    m_yCeil_factry = m_yCeil_factry,
                    s2_yCeil_factry = s2_yCeil_factry,
                    m_A_factry = m_A_factry,
                    s2_A_factry = s2_A_factry,
                    df_rL0Lmax_DEM = df_rL0Lmax_DEM,
                    this_eta_DEM = this_eta_DEM, 
                    Market0 = Market0, P_eq_00 = P_eq_00)
  print(Pe)
  #---
  if(!(is.null(this_eta_DEM))){
    chng_DEM <- 1 + this_eta_DEM
    mu_factry_efficiency <- 1 / mu_factry_efficiency_inv * chng_DEM
    mu_factry_efficiency_inv <- 1 / mu_factry_efficiency
    sig2_factry_efficiency_inv <- (cv_factry_efficiency_inv * mu_factry_efficiency_inv)^2
    if(is.null(df_rL0Lmax_DEM$rL0)){
      P0 <- P_eq_00
      out_df <- get_rL0Lmax_01_DEM(Pe, interval_r = c(0, 1), P0, this_eta_DEM)
      rL0_e_DEM <- ifelse(Market0, out_df$r0_L0_vec_DEM, out_df$r1_L0_vec_DEM)
      rLmax_e_DEM <- ifelse(Market0, out_df$r0_Lmax_vec_DEM, out_df$r1_Lmax_vec_DEM)
      df_rL0Lmax_e_DEM <- data.frame(rL0 = rL0_e_DEM, rLmax = rLmax_e_DEM)
    }else{
      rL0_e_DEM <- df_rL0Lmax_DEM$rL0
      rLmax_e_DEM <- df_rL0Lmax_DEM$rLmax
      df_rL0Lmax_e_DEM <- data.frame(rL0 = rL0_e_DEM, rLmax = rLmax_e_DEM)
    }
  }else{
    rL0_e_DEM <- df_rL0Lmax_DEM$rL0
    rLmax_e_DEM <- df_rL0Lmax_DEM$rLmax
    df_rL0Lmax_e_DEM <- data.frame(rL0 = rL0_e_DEM, rLmax = rLmax_e_DEM)
    sig2_factry_efficiency_inv <- (cv_factry_efficiency_inv * mu_factry_efficiency_inv)^2
  }
  #---
  if(!(is.null(this_eta_SUP))){
    chng_SUP <- 1 + this_eta_SUP
    mu_cost_per_farmProduct <- mu_cost_per_farmProduct * chng_SUP
    sig2_cost_per_farmProduct <- (cv_cost_per_farmProduct * mu_cost_per_farmProduct)^2
    if(is.null(df_rL0Lmax_SUP$rL0)){
      P0 <- P_eq_00
      out_df <- get_rL0Lmax_01_SUP(Pe, interval_r = c(0, 1), P0, this_eta_SUP)
      rL0_e_SUP <- ifelse(Market0, out_df$r0_L0_vec_SUP, out_df$r1_L0_vec_SUP)
      rLmax_e_SUP <- ifelse(Market0, out_df$r0_Lmax_vec_SUP, out_df$r1_Lmax_vec_SUP)
      df_rL0Lmax_e_SUP <- data.frame(rL0 = rL0_e_SUP, rLmax = rLmax_e_SUP)
    }else{
      rL0_e_SUP <- df_rL0Lmax_SUP$rL0
      rLmax_e_SUP <- df_rL0Lmax_SUP$rLmax
      df_rL0Lmax_e_SUP <- data.frame(rL0 = rL0_e_SUP, rLmax = rLmax_e_SUP)
    }
  }else{
    rL0_e_SUP <- df_rL0Lmax_SUP$rL0
    rLmax_e_SUP <- df_rL0Lmax_SUP$rLmax
    df_rL0Lmax_e_SUP <- data.frame(rL0 = rL0_e_SUP, rLmax = rLmax_e_SUP)
    sig2_cost_per_farmProduct <- (cv_cost_per_farmProduct * mu_cost_per_farmProduct)^2
  }
  #---
  df_QD_e <- Q_DorS(N = N_D,
                    P_input = Pe,
                    P_output = P_factryProduct,
                    mu_beta = mu_factry_efficiency_inv,
                    sig2_beta = sig2_factry_efficiency_inv,
                    m_yCeil = m_yCeil_factry,
                    s2_yCeil = s2_yCeil_factry,
                    m_A = m_A_factry,
                    s2_A = s2_A_factry,
                    df_rL0Lmax = df_rL0Lmax_e_DEM,
                    l_credit = 0)
  #---
  df_QS_e <- Q_DorS(N = N_S,
                    P_input = 1,
                    P_output = Pe,
                    mu_beta = mu_cost_per_farmProduct,
                    sig2_beta = sig2_cost_per_farmProduct,
                    m_yCeil = m_yCeil_farm,
                    s2_yCeil = s2_yCeil_farm,
                    m_A = m_A_farm,
                    s2_A = s2_A_farm,
                    df_rL0Lmax = df_rL0Lmax_e_SUP,
                    l_credit = 0)
  #---
  Qe <- df_QS_e$Q_D_or_S
  mkt_particip_DEM <- df_QD_e$mkt_participation
  mkt_particip_SUP <- df_QS_e$mkt_participation
  outlist <- list(Pe, Qe, mkt_particip_DEM, mkt_particip_SUP,
                  rL0_e_DEM, rLmax_e_DEM, rL0_e_SUP, rLmax_e_SUP)
  return(outlist)
}

#==================================
#==================================
# Demand or supply function
#==================================
#==================================
#==================================
#==================================
#==================================
Q_DorS <- function(N, P_input, P_output, 
                   mu_beta, sig2_beta,
                   m_yCeil, s2_yCeil,
                   m_A, s2_A,
                   df_rL0Lmax = data.frame(rL0 = 1, rLmax = 0),
                   l_credit = 0){
  #--------------------------------
  # mu_r
  ratio_price <- P_input / P_output * (1 - l_credit)
  mu_r <- ratio_price * mu_beta
  #--------------------------------
  # s_qStar
  sig2_r <- ratio_price^2 * sig2_beta
  s2_qStar <- s2_A + s2_yCeil + sig2_r
  s_qStar <- sqrt(s2_qStar)
  #--------------------------------
  # mu_qStar
  m_qStar <- m_A + m_yCeil - mu_r
  mu_qStar <- exp(m_qStar + s2_qStar / 2)
  #--------------------------------
  # Nvr0, Nvr1
  # Note: if sig2_beta = 0 then so should s2_yCeil, and N_D should = 1
  if(sig2_beta != 0){
    rL0 <- df_rL0Lmax$rL0
    rLmax <- df_rL0Lmax$rLmax
    vrLmax <- (-rLmax + mu_r - s2_qStar) / s_qStar
    vrL0 <- (-rL0 + mu_r - s2_qStar) / s_qStar
    NvrLmax <- pnorm(vrLmax)
    NvrL0 <- pnorm(vrL0)
    #--------------------------------
    # QD or QS
    #mkt_participation <- (1 + NvrLmax - NvrL0) / 2
    mkt_participation <- NvrLmax - NvrL0
    Q_D_or_S <- N * mu_qStar * mkt_participation
  }else{
    Q_D_or_S <- mu_qStar
  }
  #--------------------------------
  if(nrow(df_rL0Lmax) > 1){
    ind1 <- which(df_rL0Lmax$rL0 == 0)
    ind2 <- which(df_rL0Lmax$rLmax == 0)
    ind0 <- intersect(ind1, ind2)
    Q_D_or_S[ind0] <- 0
    mkt_participation[ind0] <- NA
  }else{
    if(rL0 == 0 & rLmax == 0){
      Q_D_or_S <- 0
      mkt_participation <- NA
    }
  }
  #--------------------------------
  df_out <- data.frame(Q_D_or_S, mkt_participation)
  return(df_out)
}
#==================================
#==================================
#==================================
#==================================
# Define net revenue functions for suppliers and demanders
# NR Demander (factory)
NRyd_DEM <- function(r, P, l_credit = 0){
  NR <- P * exp(-r) * (1 / r - 1)
  return(NR)
}
# NR Supplier (farm)
NRyd_SUP <- function(r, P, l_credit = 0){
  term <- r
  NR <- P * exp(-term) * (1 - term)
  return(NR)
}
#==================================
#==================================
#==================================
#==================================
# Define Demand and Supply NR0 - NR1 functions to feed into root solver
# Demand NR0 - NR1 function
NR0_minus_NR1_DEM <- function(rvec, P0, P1, chng_DEM, l_credit = 0, graph_only = F){
  r1 <- rvec * P1 / P0 * chng_DEM
  Baseline <- P0 * exp(-rvec) * (1 / rvec - 1)
  Alternative <- P1 * exp(-r1) * (1 / r1 - 1)
  NR0_minus_NR1 <- Baseline - Alternative
  if(graph_only == T){
    df_plot <- data.frame(rvec, Baseline, Alternative, Difference = NR0_minus_NR1)
    df_plot <- df_plot %>% gather(Type, `Net revenue`, Baseline:Difference)
    gg <- ggplot(df_plot, aes(x = rvec, y = `Net revenue`, group = Type, color = Type))
    gg <- gg + geom_line()
    gg <- gg + coord_cartesian(ylim = c(-1000, 3000), xlim = c(-1, 2.5))
    gg <- gg + geom_hline(yintercept = 0, color = "red")
    print(gg)
  }else{  
    return(NR0_minus_NR1)
  }
}
# Try it out
# chng_DEM <- chng_DEM_factry
# P0 <- Pe00
# P1 <- P_feedstock[5500]
# l_credit <- 0
# interval <- c(r0[1], r0[length(r0)])
# roots <- uniroot.all(NR0_minus_NR1_DEM, interval,
#                      lower = min(interval), upper = max(interval),
#                      P0 = P0, P1 = P1, chng_DEM = chng_DEM, l_credit = l_credit)
# roots
# NR0_minus_NR1_DEM(r0, P0, P1, chng_DEM, l_credit, graph_only = T)
#====================================
#====================================
#====================================
#====================================
# Supply NR0 - NR1 function
NR0_minus_NR1_SUP <- function(rvec, P0, P1, chng_SUP, l_credit = 0, graph_only = F){
  r1 <- rvec * P0 / P1 * chng_SUP
  Baseline <- P0 * exp(-rvec) * (1 - rvec)
  Alternative <- P1 * exp(-r1) * (1 - r1)
  NR0_minus_NR1 <- Baseline - Alternative
  if(graph_only == T){
    df_plot <- data.frame(rvec, Baseline, Alternative, Difference = NR0_minus_NR1)
    df_plot <- df_plot %>% gather(Type, `Net revenue`, Baseline:Difference)
    gg <- ggplot(df_plot, aes(x = rvec, y = `Net revenue`, group = Type, color = Type))
    gg <- gg + geom_line()
    gg <- gg + coord_cartesian(ylim = c(-1000, 3000), xlim = c(-1, 2.5))
    gg <- gg + geom_hline(yintercept = 0, color = "red")
    print(gg)
  }else{  
    return(NR0_minus_NR1)
  }
}
#Try it out
# chng_SUP <- chng_SUP_farm
# P0 <- Pe00
# P1 <- P_feedstock[4100]
# l_credit <- 0
# interval <- c(r0[1], r0[length(r0)])
# roots <- uniroot.all(NR0_minus_NR1_SUP, interval,
#                      lower = min(interval), upper = max(interval),
#                      P0 = P0, P1 = P1, chng_SUP = chng_SUP, l_credit = l_credit)
# roots
# NR0_minus_NR1_SUP(r0, P0, P1, chng_SUP, l_credit, graph_only = T)
#==================================
#==================================
#==================================
#==================================
get_r0r1Range_SUP <- function(interval, P0, P1, chng_SUP){
  roots <- uniroot.all(NR0_minus_NR1_SUP, interval,
                       lower = min(interval), upper = max(interval),
                       P0 = P0, P1 = P1, chng_SUP = chng_SUP)
  #print(roots)
  root_keep <- roots[roots > 0 & roots < 1]
  if(length(root_keep) != 0){
    if(root_keep < 10^-3 | root_keep > 998 * 10^-3){root_keep = NULL}
  }
  if(length(root_keep) > 1){print("SUP length(root_keep) > 1"); print(paste("chng_SUP =", chng_SUP))}
  #NR0_minus_NR1_SUP(r0, P0, P1, eta, graph_only = T)
  rvec <- seq(interval[1], interval[2], 0.001)
  d_abs <- abs(rvec - root_keep)
  ind_rvec_root <- which.min(d_abs)
  #print(min(d_abs))
  if(length(ind_rvec_root) != 0){
    ind_pos <- which(NR0_minus_NR1_SUP(rvec[1:ind_rvec_root], P0, P1, chng_SUP) > 0)
    length(ind_pos)
    Test <- length(ind_pos) == 0 | length(ind_pos) == 1
    r0_range <- ifelse(rep(Test, 2), c(root_keep, 1), c(0, root_keep))
    r1_range <- ifelse(rep(Test, 2), c(0, root_keep), c(root_keep, 1))
    rAdopt <- ifelse(Test, root_keep, 1 - root_keep)
  }else{
    ind_pos <- which(NR0_minus_NR1_SUP(rvec, P0, P1, chng_SUP) > 0)
    Test <- length(ind_pos) == 0 | length(ind_pos) == 1
    r0_range <- ifelse(rep(Test, 2), c(0, 0), c(0, 1))
    r1_range <- ifelse(rep(Test, 2), c(0, 1), c(0, 0))
    rAdopt <- ifelse(Test, 1, 0)
    
  }
  outlist <- list(r0_range, r1_range, rAdopt)
  return(outlist)
}
#==================================
#==================================
#==================================
get_r0r1Range_DEM <- function(interval, P0, P1, chng_DEM){
  roots <- uniroot.all(NR0_minus_NR1_DEM, interval,
                       lower = min(interval), upper = max(interval),
                       P0 = P0, P1 = P1, chng_DEM = chng_DEM)
  root_keep <- roots[roots > 0 & roots < 1]
  if(length(root_keep) != 0){
    if(root_keep < 10^-3 | root_keep > 998 * 10^-3){root_keep = NULL}
  }
  if(length(root_keep) > 1){print("DEM length(root_keep) > 1"); print(paste("chng_DEM =", chng_SUP))}
  rvec <- seq(interval[1], interval[2], 0.001)
  d_abs <- abs(rvec - root_keep)
  ind_rvec_root <- which.min(d_abs)
  #print(min(d_abs))
  if(length(ind_rvec_root) != 0){
    ind_pos <- which(NR0_minus_NR1_DEM(rvec[1:ind_rvec_root], P0, P1, chng_DEM) > 0)
    #length(ind_pos)
    Test <- length(ind_pos) == 0 | length(ind_pos) == 1
    r0_range <- ifelse(rep(Test, 2), c(root_keep, 1), c(0, root_keep))
    r1_range <- ifelse(rep(Test, 2), c(0, root_keep), c(root_keep, 1))
    rAdopt <- ifelse(Test, root_keep, 1 - root_keep)
  }else{
    ind_pos <- which(NR0_minus_NR1_DEM(rvec, P0, P1, chng_DEM) > 0)
    Test <- length(ind_pos) == 0 | length(ind_pos) == 1
    r0_range <- ifelse(rep(Test, 2), c(0, 0), c(0, 1))
    r1_range <- ifelse(rep(Test, 2), c(0, 1), c(0, 0))
    rAdopt <- ifelse(Test, 1, 0)
    
  }
  outlist <- list(r0_range, r1_range, rAdopt)
  return(outlist)
}
#==================================
#==================================
#==================================
#==================================
# get_precise_PeQe <- function(Pe_neighborhood, P_input_SUP = 1, N_S, mu_cost_per_farmProduct,
#                              sig2_cost_per_farmProduct, m_yCeil_farm, s2_yCeil_farm,
#                              m_A_farm, s2_A_farm,
#                              N_D, P_factryProduct, mu_factry_efficiency_inv,
#                              sig2_factry_efficiency_inv, m_yCeil_factry, s2_yCeil_factry,
#                              m_A_factry, s2_A_factry, rL0_DEM = 1, rLmax_DEM = 0,
#                              rL0_SUP = 1, rLmax_SUP = 0){
#   df_QD_precise <- Q_DorS(N = N_D, P_input = Pe_neighborhood,
#                           P_output = P_factryProduct,
#                           mu_beta = mu_factry_efficiency_inv,
#                           sig2_beta = sig2_factry_efficiency_inv,
#                           m_yCeil = m_yCeil_factry,
#                           s2_yCeil = s2_yCeil_factry,
#                           m_A = m_A_factry,
#                           s2_A = s2_A_factry,
#                           rL0 = rL0_DEM, rLmax = rLmax_DEM,
#                           l_credit = 0)
#   colnames(df_QD_precise) <- c("Demand (MT)", "Demand Market Participation")
#   df_QD_precise$`Feedstock Price (lcu / MT)` <- Pe_neighborhood
#   df_QS_precise <- Q_DorS(N = N_S, P_input = P_input_SUP,
#                           P_output = Pe_neighborhood,
#                           mu_beta = mu_cost_per_farmProduct,
#                           sig2_beta = sig2_cost_per_farmProduct,
#                           m_yCeil = m_yCeil_farm,
#                           s2_yCeil = s2_yCeil_farm,
#                           m_A = m_A_farm, s2_A = s2_A_farm,
#                           rL0 = rL0_SUP, rLmax = rLmax_SUP,
#                           l_credit = 0)
#   colnames(df_QS_precise) <- c("Supply (MT)", "Supply Market Participation")
#   df_QS_precise$`Feedstock Price (lcu / MT)` <- Pe_neighborhood
#   d <- df_QS_precise$`Supply (MT)` - df_QD_precise$`Demand (MT)`
#   d_abs <- abs(d)
#   min_d_abs <- min(d_abs)
#   ind_Pe <- which.min(d_abs)
#   Pe <- Pe_neighborhood[ind_Pe]
#   Qe <- df_QS_precise$`Supply (MT)`[ind_Pe]
#   Demand_particip <- df_QD_precise$`Demand Market Participation`[ind_Pe]
#   Supply_particip <- df_QS_precise$`Supply Market Participation`[ind_Pe]
#   return(c(Pe, Qe, Demand_particip, Supply_particip))
# }
#==================================
#==================================
#==================================
#==================================
# (End function definition)
#==================================
#==================================
#==================================
#==================================
# Baseline market, before release of new tech
#==================================
# Define price range
P_feedstock <- seq(100, 5000, 10)
#==================================
# Demand side parameters
P_starch_lcu_MT_statQuo <- 14000
P_ethanol_lcu_kL_statQuo <- 23500 #https://www.ceicdata.com/en/thailand/biofuel-reference-price/reference-price-ethanol-price-
MTRootsPerMTStarch_statQuo <- 4.21
Q_root_MT_day_statQuo <- 1100
Q_ethanol_kL_day_statQuo <- 180#343.6
Q_starch_MT_day_statQuo <- Q_root_MT_day_statQuo / MTRootsPerMTStarch_statQuo
MTRootsPerkLEthanol_statQuo <- Q_root_MT_day_statQuo / Q_ethanol_kL_day_statQuo
N_D_factry_starch <- 10
N_D_factry_ethanol <- 14
cv_factryEfficiency_starch <- 0.12
cv_factryEfficiency_ethanol <- 0.08
m_yCeil_factry_starch <- log(Q_starch_MT_day_statQuo * 1.5)
m_yCeil_factry_ethanol <- log(Q_ethanol_kL_day_statQuo * 1.5)
cv_lyCeil_factry_starch <- 0.5
cv_lyCeil_factry_ethanol <- 0.1
P_starch_lcu_MT_statQuo / MTRootsPerMTStarch_statQuo
P_ethanol_lcu_kL_statQuo / MTRootsPerkLEthanol_statQuo
N_D_factry_ethANDstarch <- 15
cv_factry_ethANDstarch <- 0.15
MTRootsPerMTEthANDstarch_statQuo <- 4
P_ethANDstarch_lcu_MT_statQuo <- 16000
m_yCeil_factry_MTEthANDstarch <- log(400)
#----------------------------------
N_D <- N_D_factry_ethanol
P_factryProduct <- P_ethanol_lcu_kL_statQuo
mu_factry_efficiency_inv_statQuo <- MTRootsPerkLEthanol_statQuo
cv_factry_efficiency_inv_statQuo <- cv_factryEfficiency_ethanol
sig2_factry_efficiency_inv_statQuo <- (mu_factry_efficiency_inv_statQuo * cv_factry_efficiency_inv_statQuo)^2
m_yCeil_factry <- m_yCeil_factry_ethanol
cv_lyCeil_factry <- cv_lyCeil_factry_ethanol
s2_yCeil_factry <- (m_yCeil_factry * cv_lyCeil_factry)^2
m_A_factry <- 0
cv_lA_factry <- 0
s2_A_factry <- (m_A_factry * cv_lA_factry)^2
#==================================
# Supply side parameters
N_S <- 32
mu_cost_per_farmProduct_statQuo <- 2800#1520.366
cv_cost_per_farmProduct_statQuo <- 0.15
sig2_cost_per_farmProduct_statQuo <- (mu_cost_per_farmProduct_statQuo * cv_cost_per_farmProduct_statQuo)^2
m_yCeil_farm <- log(45)#log(43.8375)
cv_lyCeil_farm <- 0
s2_yCeil_farm <- (m_yCeil_farm * cv_lyCeil_farm)^2
m_A_farm <- log(4.673574)
cv_lA_farm <- 0.5
s2_A_farm <- (m_A_farm * cv_lA_farm)^2
#==================================
#==================================
# Baseline Demand curve plot
graph_on <- F
#==================================
df_rL0Lmax <- data.frame(rL0 = 1, rLmax = 0)
df_QD00 <- Q_DorS(N = N_D,
                  P_input = P_feedstock,
                  P_output = P_factryProduct,
                  mu_beta = mu_factry_efficiency_inv_statQuo,
                  sig2_beta = sig2_factry_efficiency_inv_statQuo,
                  m_yCeil = m_yCeil_factry,
                  s2_yCeil = s2_yCeil_factry,
                  m_A = m_A_factry,
                  s2_A = s2_A_factry,
                  df_rL0Lmax,
                  l_credit = 0)
colnames(df_QD00) <- c("Demand (MT)", "Demand Market Participation")
df_QD00$`Feedstock Price (lcu / MT)` <- P_feedstock
if(graph_on == T){
  df_plot <- df_QD00
  gg <- ggplot(df_plot, aes(x = `Feedstock Price (lcu / MT)`, y = `Demand (MT)`))
  gg <- gg + geom_line(lwd = 2)
  gg
  gg <- ggplot(df_plot, aes(x = `Feedstock Price (lcu / MT)`, y = `Demand Market Participation`))
  gg <- gg + geom_line(lwd = 2)
  gg
  
}
#==================================
# Explore demand curve sensitivity
#----------------------------------
# to changes in mean conversion efficiency
turn_on <- F
#----------------------------------
if(turn_on == T){
  eta_vec <- seq(-0.4, 0.4, 0.2)
  dfQD_list <- list()
  for(i in 1:length(eta_vec)){
    this_eta_DEM <- eta_vec[i]
    this_mu_factry_efficiency_inv <- mu_factry_efficiency_inv * (1 + this_eta_DEM)
    this_sig2_factry_efficiency_inv <- (cv_factry_efficiency_inv * this_mu_factry_efficiency_inv)^2
    df_QD <- Q_DorS(N = N_D,
                    P_input = P_feedstock,
                    P_output = P_factryProduct,
                    mu_beta = this_mu_factry_efficiency_inv,
                    sig2_beta = this_sig2_factry_efficiency_inv,
                    m_yCeil = m_yCeil_factry,
                    s2_yCeil = s2_yCeil_factry,
                    m_A = m_A_factry,
                    s2_A = s2_A_factry,
                    df_rL0Lmax,
                    l_credit = 0)
    df_QD$`Feedstock Price (lcu / MT)` <- P_feedstock
    df_QD$`Mean Conversion\nEfficiency` <- as.character(round(this_mu_factry_efficiency_inv, 2))
    dfQD_list[[i]] <- df_QD
    
  }
  df_QD <- do.call(rbind, dfQD_list)
  colnames(df_QD)[1:2] <- c("Demand (MT)", "Demand Market Participation")
  df_plot <- df_QD
  gg <- ggplot(df_plot, aes(x = `Feedstock Price (lcu / MT)`, y = `Demand (MT)`, group = `Mean Conversion\nEfficiency`, color = `Mean Conversion\nEfficiency`))
  gg <- gg + geom_line(lwd = 2)
  gg
  gg <- ggplot(df_plot, aes(x = `Feedstock Price (lcu / MT)`, y = `Demand Market Participation`, group = `Mean Conversion\nEfficiency`, color = `Mean Conversion\nEfficiency`))
  gg <- gg + geom_line(lwd = 2)
  gg
  df_QD_factryEfficiency <- df_QD
}
#----------------------------------
# to changes in variance (cv) of conversion efficiency
turn_on <- F
#----------------------------------
if(turn_on == T){
  eta_vec <- seq(0.1, 0.5, 0.1)
  dfQD_list <- list()
  for(i in 1:length(eta_vec)){
    this_eta_DEM <- eta_vec[i]
    this_cv_factry_efficiency_inv <- cv_factry_efficiency_inv + this_eta_DEM
    this_sig2_factry_efficiency_inv <- (this_cv_factry_efficiency_inv * mu_factry_efficiency_inv)^2
    df_QD <- Q_DorS(N = N_D,
                    P_input = P_feedstock,
                    P_output = P_factryProduct,
                    mu_beta = mu_factry_efficiency_inv,
                    sig2_beta = this_sig2_factry_efficiency_inv,
                    m_yCeil = m_yCeil_factry,
                    s2_yCeil = s2_yCeil_factry,
                    m_A = m_A_factry,
                    s2_A = s2_A_factry,
                    df_rL0Lmax,
                    l_credit = 0)
    df_QD$`CV Conversion\nEfficiency` <- as.character(this_cv_factry_efficiency_inv)
    dfQD_list[[i]] <- df_QD
    
  }
  df_QD <- do.call(rbind, dfQD_list)
  colnames(df_QD)[1:2] <- c("Demand (MT)", "Demand Market Participation")
  df_QD$`Feedstock Price (lcu / MT)` <- P_feedstock
  df_plot <- df_QD
  gg <- ggplot(df_plot, aes(x = `Feedstock Price (lcu / MT)`, y = `Demand (MT)`, group = `CV Conversion\nEfficiency`, color = `CV Conversion\nEfficiency`))
  gg <- gg + geom_line(lwd = 2)
  gg
  gg <- ggplot(df_plot, aes(x = `Feedstock Price (lcu / MT)`, y = `Demand Market Participation`, group = `CV Conversion\nEfficiency`, color = `CV Conversion\nEfficiency`))
  gg <- gg + geom_line(lwd = 2)
  gg  
}
#----------------------------------
# to changes in mean factory capacity
turn_on <- F
#----------------------------------
if(turn_on == T){
  eta_vec <- seq(0.2, 0.9, 0.2)
  dfQD_list <- list()
  for(i in 1:length(eta_vec)){
    this_eta_DEM <- eta_vec[i]
    this_m_yCeil_factry <- m_yCeil_factry + this_eta_DEM
    this_s2_yCeil_factry <- (cv_lyCeil_factry * this_m_yCeil_factry)^2
    df_QD <- Q_DorS(N = N_D,
                    P_input = P_feedstock,
                    P_output = P_factryProduct,
                    mu_beta = mu_factry_efficiency_inv,
                    sig2_beta = sig2_factry_efficiency_inv,
                    m_yCeil = this_m_yCeil_factry,
                    s2_yCeil = this_s2_yCeil_factry,
                    m_A = m_A_factry,
                    s2_A = s2_A_factry,
                    df_rL0Lmax,
                    l_credit = 0)
    df_QD$`Mean (logged)\nFactory Capacity` <- as.character(round(this_m_yCeil_factry, 2))
    dfQD_list[[i]] <- df_QD
    
  }
  df_QD <- do.call(rbind, dfQD_list)
  colnames(df_QD)[1:2] <- c("Demand (MT)", "Demand Market Participation")
  df_QD$`Feedstock Price (lcu / MT)` <- P_feedstock
  df_plot <- df_QD
  gg <- ggplot(df_plot, aes(x = `Feedstock Price (lcu / MT)`, y = `Demand (MT)`, group = `Mean (logged)\nFactory Capacity`, color = `Mean (logged)\nFactory Capacity`))
  gg <- gg + geom_line(lwd = 2)
  gg
  gg <- ggplot(df_plot, aes(x = `Feedstock Price (lcu / MT)`, y = `Demand Market Participation`, group = `Mean (logged)\nFactory Capacity`, color = `Mean (logged)\nFactory Capacity`))
  gg <- gg + geom_line(lwd = 2)
  gg
  
}
#----------------------------------
# to changes in variance (cv) of factory capacity
#----------------------------------
turn_on <- F
if(turn_on == T){
  eta_vec <- seq(0.05, 0.2, 0.05)
  dfQD_list <- list()
  for(i in 1:length(eta_vec)){
    this_eta_DEM <- eta_vec[i]
    this_cv_lyCeil_factry <- cv_lyCeil_factry + this_eta_DEM
    this_s2_yCeil_factry <- (this_cv_lyCeil_factry * m_yCeil_factry)^2
    df_QD <- Q_DorS(N = N_D,
                    P_input = P_feedstock,
                    P_output = P_factryProduct,
                    mu_beta = mu_factry_efficiency_inv,
                    sig2_beta = sig2_factry_efficiency_inv,
                    m_yCeil = m_yCeil_factry,
                    s2_yCeil = this_s2_yCeil_factry,
                    m_A = m_A_factry,
                    s2_A = s2_A_factry,
                    df_rL0Lmax,
                    l_credit = 0)
    df_QD$`CV (logged)\nFactory Capacity` <- as.character(this_cv_lyCeil_factry)
    dfQD_list[[i]] <- df_QD
    
  }
  df_QD <- do.call(rbind, dfQD_list)
  colnames(df_QD)[1:2] <- c("Demand (MT)", "Demand Market Participation")
  df_QD$`Feedstock Price (lcu / MT)` <- P_feedstock
  df_plot <- df_QD
  gg <- ggplot(df_plot, aes(x = `Feedstock Price (lcu / MT)`, y = `Demand (MT)`, group = `CV (logged)\nFactory Capacity`, color = `CV (logged)\nFactory Capacity`))
  gg <- gg + geom_line(lwd = 2)
  gg
  gg <- ggplot(df_plot, aes(x = `Feedstock Price (lcu / MT)`, y = `Demand Market Participation`, group = `CV (logged)\nFactory Capacity`, color = `CV (logged)\nFactory Capacity`))
  gg <- gg + geom_line(lwd = 2)
  gg  
}

#----------------------------------
# to changes in expected output price
turn_on <- F
#----------------------------------
if(turn_on == T){
  eta_vec <- seq(-0.2, 0.2, 0.1)
  dfQD_list <- list()
  for(i in 1:length(eta_vec)){
    this_eta_DEM <- eta_vec[i]
    this_P_factryProduct <- P_factryProduct * (1 + this_eta_DEM)
    df_QD <- Q_DorS(N = N_D,
                    P_input = P_feedstock,
                    P_output = this_P_factryProduct,
                    mu_beta = mu_factry_efficiency_inv,
                    sig2_beta = sig2_factry_efficiency_inv,
                    m_yCeil = m_yCeil_factry,
                    s2_yCeil = s2_yCeil_factry,
                    m_A = m_A_factry,
                    s2_A = s2_A_factry,
                    df_rL0Lmax,
                    l_credit = 0)
    df_QD$`Output Price (lcu / MT)` <- as.character(this_P_factryProduct)
    dfQD_list[[i]] <- df_QD
    
  }
  df_QD <- do.call(rbind, dfQD_list)
  colnames(df_QD)[1:2] <- c("Demand (MT)", "Demand Market Participation")
  df_QD$`Feedstock Price (lcu / MT)` <- P_feedstock
  df_plot <- df_QD
  gg <- ggplot(df_plot, aes(x = `Feedstock Price (lcu / MT)`, y = `Demand (MT)`, group = `Output Price (lcu / MT)`, color = `Output Price (lcu / MT)`))
  gg <- gg + geom_line(lwd = 2)
  gg
  gg <- ggplot(df_plot, aes(x = `Feedstock Price (lcu / MT)`, y = `Demand Market Participation`, group = `Output Price (lcu / MT)`, color = `Output Price (lcu / MT)`))
  gg <- gg + geom_line(lwd = 2)
  gg
  
}
#==================================
#==================================
#==================================
#==================================
#==================================
#==================================
# Baseline Supply curve plot
#==================================
df_rL0Lmax <- data.frame(rL0 = 1, rLmax = 0)
df_QS00 <- Q_DorS(N = N_S,
                  P_input = 1,
                  P_output = P_feedstock,
                  mu_beta = mu_cost_per_farmProduct_statQuo,
                  sig2_beta = sig2_cost_per_farmProduct_statQuo,
                  m_yCeil = m_yCeil_farm,
                  s2_yCeil = s2_yCeil_farm,
                  m_A = m_A_farm,
                  s2_A = s2_A_farm,
                  df_rL0Lmax,
                  l_credit = 0)
colnames(df_QS00) <- c("Supply (MT)", "Supply Market Participation")
df_QS00$`Feedstock Price (lcu / MT)` <- P_feedstock
graph_on <- F
if(graph_on == T){
  df_plot <- df_QS00
  gg <- ggplot(df_plot, aes(x = `Feedstock Price (lcu / MT)`, y = `Supply (MT)`))
  gg <- gg + geom_line(lwd = 2)
  gg
  gg <- ggplot(df_plot, aes(x = `Feedstock Price (lcu / MT)`, y = `Supply Market Participation`))
  gg <- gg + geom_line(lwd = 2)
  gg
  
}
#==================================
# Explore supply curve sensitivity
#----------------------------------
# to changes in mean cost per farm output
#----------------------------------
turn_on <- F
if(turn_on == T){
  eta_vec <- seq(-0.3, 0.6, 0.3)
  dfQS_list <- list()
  for(i in 1:length(eta_vec)){
    this_eta_SUP <- eta_vec[i]
    this_mu_cost_per_farmProduct <- mu_cost_per_farmProduct * (1 + this_eta_SUP)
    this_sig2_cost_per_farmProduct <- (cv_cost_per_farmProduct * this_mu_cost_per_farmProduct)^2
    df_QS <- Q_DorS(N = N_S,
                    P_input = 1,
                    P_output = P_feedstock,
                    mu_beta = this_mu_cost_per_farmProduct,
                    sig2_beta = this_sig2_cost_per_farmProduct,
                    m_yCeil = m_yCeil_farm,
                    s2_yCeil = s2_yCeil_farm,
                    m_A = m_A_farm,
                    s2_A = s2_A_farm,
                    df_rL0Lmax,
                    l_credit = 0)
    df_QS$`Mean Cost\nPer Unit\nFarm Output\n(lcu)` <- as.character(round(this_mu_cost_per_farmProduct, 0))
    dfQS_list[[i]] <- df_QS
    
  }
  df_QS <- do.call(rbind, dfQS_list)
  colnames(df_QS)[1:2] <- c("Supply (MT)", "Supply Market Participation")
  df_QS$`Feedstock Price (lcu / MT)` <- P_feedstock
  df_plot <- df_QS
  gg <- ggplot(df_plot, aes(x = `Feedstock Price (lcu / MT)`, y = `Supply (MT)`, group = `Mean Cost\nPer Unit\nFarm Output\n(lcu)`, color = `Mean Cost\nPer Unit\nFarm Output\n(lcu)`))
  gg <- gg + geom_line(lwd = 2)
  gg
  gg <- ggplot(df_plot, aes(x = `Feedstock Price (lcu / MT)`, y = `Supply Market Participation`, group = `Mean Cost\nPer Unit\nFarm Output\n(lcu)`, color = `Mean Cost\nPer Unit\nFarm Output\n(lcu)`))
  gg <- gg + geom_line(lwd = 2)
  gg
  df_QS_farmCost <- df_QS
}
#----------------------------------
# to changes in variance (cv) of farm cost per unit output
#----------------------------------
turn_on <- F
if(turn_on == T){
  eta_vec <- seq(-0.1, 0.8, 0.3)
  dfQS_list <- list()
  for(i in 1:length(eta_vec)){
    this_eta_SUP <- eta_vec[i]
    this_cv_cost_per_farmProduct <- cv_cost_per_farmProduct  + this_eta_SUP
    this_sig2_cost_per_farmProduct <- (this_cv_cost_per_farmProduct * mu_cost_per_farmProduct)^2
    df_QS <- Q_DorS(N = N_S,
                    P_input = 1,
                    P_output = P_feedstock,
                    mu_beta = mu_cost_per_farmProduct,
                    sig2_beta = this_sig2_cost_per_farmProduct,
                    m_yCeil = m_yCeil_farm,
                    s2_yCeil = s2_yCeil_farm,
                    m_A = m_A_farm,
                    s2_A = s2_A_farm,
                    df_rL0Lmax,
                    l_credit = 0)
    df_QS$`CV Cost\nPer Unit\nFarm Output\n(lcu)` <- as.character(this_cv_cost_per_farmProduct)
    dfQS_list[[i]] <- df_QS
    
  }
  df_QS <- do.call(rbind, dfQS_list)
  colnames(df_QS)[1:2] <- c("Supply (MT)", "Supply Market Participation")
  df_QS$`Feedstock Price (lcu / MT)` <- P_feedstock
  df_plot <- df_QS
  gg <- ggplot(df_plot, aes(x = `Feedstock Price (lcu / MT)`, y = `Supply (MT)`, group = `CV Cost\nPer Unit\nFarm Output\n(lcu)`, color = `CV Cost\nPer Unit\nFarm Output\n(lcu)`))
  gg <- gg + geom_line(lwd = 2)
  gg
  gg <- ggplot(df_plot, aes(x = `Feedstock Price (lcu / MT)`, y = `Supply Market Participation`, group = `CV Cost\nPer Unit\nFarm Output\n(lcu)`, color = `CV Cost\nPer Unit\nFarm Output\n(lcu)`))
  gg <- gg + geom_line(lwd = 2)
  gg
  
}
#----------------------------------
# to changes in mean farm size
#----------------------------------
turn_on <- F
if(turn_on == T){
  eta_vec <- seq(-0.2, 0.1, 0.1)
  dfQS_list <- list()
  for(i in 1:length(eta_vec)){
    this_eta_SUP <- eta_vec[i]
    this_m_A_farm <- m_A_farm * (1 + this_eta_SUP)
    this_s2_A_farm <- (cv_lA_farm * this_m_A_farm)^2
    df_QS <- Q_DorS(N = N_S,
                    P_input = 1,
                    P_output = P_feedstock,
                    mu_beta = mu_cost_per_farmProduct,
                    sig2_beta = sig2_cost_per_farmProduct,
                    m_yCeil = m_yCeil_farm,
                    s2_yCeil = s2_yCeil_farm,
                    m_A = this_m_A_farm,
                    s2_A = this_s2_A_farm,
                    df_rL0Lmax,
                    l_credit = 0)
    df_QS$`Mean (logged)\nFarm Size (Ha.)` <- as.character(round(this_m_A_farm, 1))
    dfQS_list[[i]] <- df_QS
    
  }
  df_QS <- do.call(rbind, dfQS_list)
  colnames(df_QS)[1:2] <- c("Supply (MT)", "Supply Market Participation")
  df_QS$`Feedstock Price (lcu / MT)` <- P_feedstock
  df_plot <- df_QS
  gg <- ggplot(df_plot, aes(x = `Feedstock Price (lcu / MT)`, y = `Supply (MT)`, group = `Mean (logged)\nFarm Size (Ha.)`, color = `Mean (logged)\nFarm Size (Ha.)`))
  gg <- gg + geom_line(lwd = 2)
  gg
  gg <- ggplot(df_plot, aes(x = `Feedstock Price (lcu / MT)`, y = `Supply Market Participation`, group = `Mean (logged)\nFarm Size (Ha.)`, color = `Mean (logged)\nFarm Size (Ha.)`))
  gg <- gg + geom_line(lwd = 2)
  gg
  
}
#----------------------------------
# to changes in variance (cv) of farm size
#----------------------------------
turn_on <- F
if(turn_on == T){
  eta_vec <- seq(-0.2, 0.1, 0.1)
  dfQS_list <- list()
  for(i in 1:length(eta_vec)){
    this_eta_SUP <- eta_vec[i]
    this_cv_lA_farm <- cv_lA_farm + this_eta_SUP
    this_s2_A_farm <- (this_cv_lA_farm * m_A_farm)^2
    df_QS <- Q_DorS(N = N_S,
                    P_input = 1,
                    P_output = P_feedstock,
                    mu_beta = mu_cost_per_farmProduct,
                    sig2_beta = sig2_cost_per_farmProduct,
                    m_yCeil = m_yCeil_farm,
                    s2_yCeil = s2_yCeil_farm,
                    m_A = m_A_farm,
                    s2_A = this_s2_A_farm,
                    df_rL0Lmax,
                    l_credit = 0)
    df_QS$`CV (logged)\nFarm Size (Ha.)` <- as.character(round(this_cv_lA_farm, 1))
    dfQS_list[[i]] <- df_QS
    
  }
  df_QS <- do.call(rbind, dfQS_list)
  colnames(df_QS)[1:2] <- c("Supply (MT)", "Supply Market Participation")
  df_QS$`Feedstock Price (lcu / MT)` <- P_feedstock
  df_plot <- df_QS
  gg <- ggplot(df_plot, aes(x = `Feedstock Price (lcu / MT)`, y = `Supply (MT)`, group = `CV (logged)\nFarm Size (Ha.)`, color = `CV (logged)\nFarm Size (Ha.)`))
  gg <- gg + geom_line(lwd = 2)
  gg
  gg <- ggplot(df_plot, aes(x = `Feedstock Price (lcu / MT)`, y = `Supply Market Participation`, group = `CV (logged)\nFarm Size (Ha.)`, color = `CV (logged)\nFarm Size (Ha.)`))
  gg <- gg + geom_line(lwd = 2)
  gg
  
}
#====================================
#====================================
#====================================
#====================================
# Baseline Demand and Supply Together (aka the market, PE model, etc.)
# Here we get Pe the baseline equilibrium price before release of the alternative
interval_P <- c(P_feedstock[1], P_feedstock[length(P_feedstock)])
df_rL0Lmax_SUP <- data.frame(rL0 = 1, rLmax = 0)
df_rL0Lmax_DEM <- data.frame(rL0 = 1, rLmax = 0)
equilib00_list <- get_equilibrium_values(interval_P, N_S = N_S,
                                         mu_cost_per_farmProduct = mu_cost_per_farmProduct_statQuo,
                                         cv_cost_per_farmProduct = cv_cost_per_farmProduct_statQuo,
                                         m_yCeil_farm = m_yCeil_farm,
                                         s2_yCeil_farm = s2_yCeil_farm,
                                         m_A_farm = m_A_farm,
                                         s2_A_farm = s2_A_farm,
                                         df_rL0Lmax_SUP,
                                         this_eta_SUP = NULL,
                                         N_D = N_D,
                                         P_factryProduct = P_factryProduct,
                                         mu_factry_efficiency_inv = mu_factry_efficiency_inv_statQuo,
                                         cv_factry_efficiency_inv = cv_factry_efficiency_inv_statQuo,
                                         m_yCeil_factry = m_yCeil_factry,
                                         s2_yCeil_factry = s2_yCeil_factry,
                                         m_A_factry = m_A_factry,
                                         s2_A_factry = s2_A_factry,
                                         df_rL0Lmax_DEM,
                                         this_eta_DEM = NULL,
                                         Market0 = NULL, P_eq_00 = NULL)
Pe00 <- equilib00_list[[1]]
Qe00 <- equilib00_list[[2]]
MktParticip00_DEM <- equilib00_list[[3]]
MktParticip00_SUP <- equilib00_list[[4]]
rL0_e_DEM00 <- equilib00_list[[5]]
rLmax_e_DEM00 <- equilib00_list[[6]]
rL0_e_SUP00 <- equilib00_list[[7]]
rLmax_e_SUP00 <- equilib00_list[[8]]
df_Eq00 <- data.frame(Pe = Pe00, Qe = Qe00,
                      MktParticip_DEM = MktParticip00_DEM, MktParticip_SUP = MktParticip00_SUP,
                      Tech = "Before release (Baseline)")
print(df_Eq00)
#------------------------------------
df_QSQD00 <- merge(df_QS00, df_QD00, by = "Feedstock Price (lcu / MT)")
df_QSQD00 <- df_QSQD00[, c("Feedstock Price (lcu / MT)", "Supply Market Participation", "Demand Market Participation",
                           "Supply (MT)", "Demand (MT)")]
#colnames(df_QSQD)[4:5] <- c("Supply", "Demand")

df_QSQD00 <- df_QSQD00 %>% gather(Type, `Quantity (MT)`, `Supply (MT)`:`Demand (MT)`)
gg <- ggplot()
gg <- gg + geom_line(data = df_QSQD00, aes(x = `Feedstock Price (lcu / MT)`, y = `Quantity (MT)`, color = Type, group = Type), lwd = 2)
gg <- gg + geom_vline(xintercept = Pe00, linetype = "dashed")
gg <- gg + theme(legend.title = element_blank())
gg
#====================================
# Baseline market mean net revenue (yield)
# Demand side:
mu_r_DEM00 <- Pe00 / P_factryProduct * mu_factry_efficiency_inv_statQuo
mu_YDe_DEM00 <- exp(m_yCeil_factry) * NRyd_DEM(mu_r_DEM00, Pe00, l_credit = 0)
# Supply side:
mu_r_SUP00 <- 1 / Pe00 * mu_cost_per_farmProduct_statQuo
mu_YDe_SUP00 <- exp(m_yCeil_farm) * NRyd_SUP(mu_r_SUP00, Pe00, l_credit = 0)
#====================================
#====================================
#====================================
#====================================
# Create maps of independent changes in farm and factory efficiency
#------------------------------------
df_rL0Lmax_DEM <- data.frame(rL0 = 1, rLmax = 0)
df_rL0Lmax_SUP <- data.frame(rL0 = 1, rLmax = 0)
eta_vec <- seq(-0.4, 0.4, 0.01)
n <- length(eta_vec)
mat_Pe <- matrix(NA, n, n)
mat_Qe <- matrix(NA, n, n)
mat_muYDe_DEM <- matrix(NA, n, n)
mat_muYDe_SUP <- matrix(NA, n, n)
mat_MktParticip_DEM <- matrix(NA, n, n)
mat_MktParticip_SUP <- matrix(NA, n, n)
df_Eq_list <- list()
interval_P_feedstock <- c(P_feedstock[1], P_feedstock[length(P_feedstock)])
t <- 0
for(k in 1:n){
  this_eta_DEM <- eta_vec[k]
  for(l in 1:n){
    this_eta_SUP <- eta_vec[l]
    #---
    equilib_list <- get_equilibrium_values(interval_P_feedstock, N_S = N_S,
                                           mu_cost_per_farmProduct = mu_cost_per_farmProduct_statQuo,
                                           cv_cost_per_farmProduct = cv_cost_per_farmProduct_statQuo,
                                           m_yCeil_farm = m_yCeil_farm,
                                           s2_yCeil_farm = s2_yCeil_farm,
                                           m_A_farm = m_A_farm,
                                           s2_A_farm = s2_A_farm,
                                           df_rL0Lmax_SUP,
                                           this_eta_SUP,
                                           N_D = N_D,
                                           P_factryProduct = P_factryProduct,
                                           mu_factry_efficiency_inv = mu_factry_efficiency_inv_statQuo,
                                           cv_factry_efficiency_inv = cv_factry_efficiency_inv_statQuo,
                                           m_yCeil_factry = m_yCeil_factry,
                                           s2_yCeil_factry = s2_yCeil_factry,
                                           m_A_factry = m_A_factry,
                                           s2_A_factry = s2_A_factry,
                                           df_rL0Lmax_DEM,
                                           this_eta_DEM,
                                           Market0 = NULL, P_eq_00 = NULL)
    Pe <- equilib_list[[1]]
    Qe <- equilib_list[[2]]
    MktParticip_DEM <- equilib_list[[3]]
    MktParticip_SUP <- equilib_list[[4]]
    rL0_e_DEM <- equilib_list[[5]]
    rLmax_e_DEM <- equilib_list[[6]]
    rL0_e_SUP <- equilib_list[[7]]
    rLmax_e_SUP <- equilib_list[[8]]
    df_Eq <- data.frame(Pe = Pe, Qe = Qe,
                        MktParticip_DEM = MktParticip_DEM, MktParticip_SUP = MktParticip_SUP,
                        Tech = "Before release (Baseline)")
    #print(df_Eq)
    #---
    t <- t + 1
    df_Eq_list[[t]] <- df_Eq
    mu_r_DEM <- Pe / P_factryProduct * this_mu_factry_efficiency_inv
    mu_YDe_DEM <- exp(m_yCeil_factry) * NRyd_DEM(mu_r_DEM, Pe, l_credit = 0)
    # Supply side:
    mu_r_SUP <- 1 / Pe00 * mu_cost_per_farmProduct
    mu_YDe_SUP <- exp(m_yCeil_farm) * NRyd_SUP(mu_r_SUP, Pe, l_credit = 0)
    
    mat_Pe[k, l] <- Pe
    mat_Qe[k, l] <- Qe
    mat_muYDe_SUP[k, l] <- mu_YDe_SUP
    mat_muYDe_DEM[k, l] <- mu_YDe_DEM
    mat_MktParticip_DEM[k, l] <- MktParticip_DEM
    mat_MktParticip_SUP[k, l] <- MktParticip_SUP
    
    print(c(k = k, l = l))
  }
}
df_Eq <- do.call(rbind, df_Eq_list)

# Maps
#------------------------------------
xtick_labs <- 1 / mu_factry_efficiency_inv * (1 + eta_vec)
ytick_labs <- mu_cost_per_farmProduct * (1 + eta_vec)
mapPalette <- colorRampPalette(c("magenta", "cyan"))
mapPalette_inv <- colorRampPalette(c("cyan", "magenta"))
#---
inMat <- mat_Pe
surface <- list(x = xtick_labs,
                y = ytick_labs,
                z = inMat)
plot.surface(surface, type = "C",
             xlab = "Mean factory efficiency (kL Ethanol / MT Root)",
             ylab = "Mean farm cost (lcu / MT Root)", labcex = 1, col = mapPalette_inv(45))
title(main = "Equilibrium Price Map (lcu)", cex.main = 1)

inMat <- mat_Qe
surface <- list(x = xtick_labs,
                y = ytick_labs,
                z = inMat)
plotSurface2(surface, type = "C",
             xlab = "Mean factory efficiency (kL Ethanol / MT Root)",
             ylab = "Mean farm cost (lcu / MT Root)", labcex = 1, col = mapPalette(45), method = "edge")
title(main = "Equilibrium Quantity Map (MT / day)", cex.main = 1)

inMat <- mat_muYDe_SUP
surface <- list(x = xtick_labs,
                y = ytick_labs,
                z = inMat)
plot.surface(surface, type = "C",
             xlab = "Mean factory efficiency (kL Ethanol / MT Root)",
             ylab = "Mean farm cost (lcu / MT Root)", labcex = 1, col = mapPalette(45))
title(main = "Mean Farm Net Revenue Map (lcu / ha.)", cex.main = 1)

inMat <- mat_muYDe_DEM
surface <- list(x = xtick_labs,
                y = ytick_labs,
                z = inMat)
plotSurface2(surface, type = "C",
             xlab = "Mean factory efficiency (kL Ethanol / MT Root)",
             ylab = "Mean farm cost (lcu / MT Root)", labcex = 1, col = mapPalette(45), method = "edge")
title(main = "Mean Factory Net Revenue Map (lcu / day)", cex.main = 1)

inMat <- mat_MktParticip_DEM
surface <- list(x = xtick_labs,
                y = ytick_labs,
                z = inMat)
plotSurface2(surface, type = "C",
             xlab = "Mean factory efficiency (kL Ethanol / MT Root)",
             ylab = "Mean farm cost (lcu / MT Root)", labcex = 1, col = mapPalette(45), method = "edge")
title(main = "Demand Market Participation Map", cex.main = 1)

inMat <- mat_MktParticip_SUP
surface <- list(x = xtick_labs,
                y = ytick_labs,
                z = inMat)
plotSurface2(surface, type = "C",
             xlab = "Mean factory efficiency (kL Ethanol / MT Root)",
             ylab = "Mean farm cost (lcu / MT Root)", labcex = 1, col = mapPalette(45), method = "edge")
title(main = "Supply Market Participation Map", cex.main = 1)
#====================================
#====================================
#====================================
#====================================
#====================================
#====================================
#====================================
#====================================
#====================================
#====================================
#====================================
#====================================
#====================================
# Now same market but with release of alternative tech
rvec <- seq(0, 1, 0.001)
interval_r <- c(rvec[1], rvec[length(rvec)])
P_eq_00 <- Pe00
eta_vec <- round(seq(-0.4, 0.4, 0.025), 2)
interval_P_feedstock <- c(P_feedstock[1], P_feedstock[length(P_feedstock)])
df_rL0Lmax_DEM <- data.frame(rL0 = NULL, rLmax = NULL)
df_rL0Lmax_SUP <- data.frame(rL0 = NULL, rLmax = NULL)
#====================================
n <- length(eta_vec)
mat_muYDe_DEM0 <- matrix(NA, n, n)
mat_muYDe_SUP0 <- matrix(NA, n, n)
mat_muYDe_DEM1 <- matrix(NA, n, n)
mat_muYDe_SUP1 <- matrix(NA, n, n)
mat_MktParticip_DEM0 <- matrix(NA, n, n)
mat_MktParticip_SUP0 <- matrix(NA, n, n)
mat_MktParticip_DEM1 <- matrix(NA, n, n)
mat_MktParticip_SUP1 <- matrix(NA, n, n)
mat_Pe1 <- matrix(NA, n, n)
mat_Qe1 <- matrix(NA, n, n)
mat_Pe0 <- matrix(NA, n, n)
mat_Qe0 <- matrix(NA, n, n)
df_Eq0_list <- list()
df_Eq0r_list <- list()
df_Eq1_list <- list()
df_Eq1r_list <- list()
t <- 0
#====================================
#====================================
#====================================
# Get roots, adoption cutoff r values for each alternative price
#====================================
for(k in 1:n){
  this_eta_DEM <- eta_vec[k]
  #---for graphing purposes
  chng_DEM <- 1 + this_eta_DEM
  mu_factry_efficiency_new <- 1 / mu_factry_efficiency_inv_statQuo * chng_DEM
  mu_factry_efficiency_inv <- 1 / mu_factry_efficiency_new
  sig2_factry_efficiency_inv <- (cv_factry_efficiency_inv_statQuo * mu_factry_efficiency_inv)^2
  P0 <- P_eq_00
  out_df <- get_rL0Lmax_01_DEM(P_feedstock, interval_r = c(0, 1), P0, this_eta_DEM)
  rL0_DEM0 <- out_df$r0_L0_vec_DEM
  rLmax_DEM0 <- out_df$r0_Lmax_vec_DEM
  df_rL0Lmax_DEM_graph0 <- data.frame(rL0 = rL0_DEM0, rLmax = rLmax_DEM0)
  #---
  df_QD0 <- Q_DorS(N = N_D,
                   P_input = P_feedstock,
                   P_output = P_factryProduct,
                   mu_beta = mu_factry_efficiency_inv,
                   sig2_beta = sig2_factry_efficiency_inv,
                   m_yCeil = m_yCeil_factry,
                   s2_yCeil = s2_yCeil_factry,
                   m_A = m_A_factry,
                   s2_A = s2_A_factry,
                   df_rL0Lmax_DEM_graph0,
                   l_credit = 0)
  colnames(df_QD0) <- c("Q", "mkt_particip")
  df_QD0$Type <- "Demand"
  df_QD0$P <- P_feedstock
  #---
  
  for(l in 1:n){
    this_eta_SUP <- eta_vec[l]
    
    #---for graphing purposes
    
    chng_SUP <- 1 + this_eta_SUP
    mu_cost_per_farmProduct <- mu_cost_per_farmProduct_statQuo * chng_SUP
    sig2_cost_per_farmProduct <- (cv_cost_per_farmProduct_statQuo * mu_cost_per_farmProduct)^2
    P0 <- P_eq_00
    out_df <- get_rL0Lmax_01_SUP(P_feedstock, interval_r = c(0, 1), P0, this_eta_SUP)
    rL0_SUP0 <- out_df$r0_L0_vec_SUP
    rLmax_SUP0 <- out_df$r0_Lmax_vec_SUP
    df_rL0Lmax_SUP_graph0 <- data.frame(rL0 = rL0_SUP0, rLmax = rLmax_SUP0)
    
    df_QS0 <- Q_DorS(N = N_S,
                     P_input = 1,
                     P_output = P_feedstock,
                     mu_beta = mu_cost_per_farmProduct,
                     sig2_beta = sig2_cost_per_farmProduct,
                     m_yCeil = m_yCeil_farm,
                     s2_yCeil = s2_yCeil_farm,
                     m_A = m_A_farm,
                     s2_A = s2_A_farm,
                     df_rL0Lmax_SUP_graph0,
                     l_credit = 0)
    colnames(df_QS0) <- c("Q", "mkt_particip")
    df_QS0$Type <- "Supply"
    df_QS0$P <- P_feedstock
    #---
    df_plot <- rbind(df_QD0, df_QS0)
    gg <- ggplot(df_plot, aes(x = P, y = Q, group = Type, color = Type))
    gg <- gg + geom_point()
    gg
    #---
    
    
    
    
    
    
    Market0 <- T
    #interval_P_feedstock <- c(P_feedstock[1], P_feedstock[length(P_feedstock)])
    equilib_list0 <- get_equilibrium_values(interval_P_feedstock,
                                            N_S = N_S,
                                            mu_cost_per_farmProduct = mu_cost_per_farmProduct_statQuo,
                                            cv_cost_per_farmProduct = cv_cost_per_farmProduct_statQuo,
                                            m_yCeil_farm = m_yCeil_farm,
                                            s2_yCeil_farm = s2_yCeil_farm,
                                            m_A_farm = m_A_farm,
                                            s2_A_farm = s2_A_farm,
                                            df_rL0Lmax_SUP,
                                            this_eta_SUP,
                                            N_D = N_D,
                                            P_factryProduct = P_factryProduct,
                                            mu_factry_efficiency_inv = mu_factry_efficiency_inv_statQuo,
                                            cv_factry_efficiency_inv = cv_factry_efficiency_inv_statQuo,
                                            m_yCeil_factry = m_yCeil_factry,
                                            s2_yCeil_factry = s2_yCeil_factry,
                                            m_A_factry = m_A_factry,
                                            s2_A_factry = s2_A_factry,
                                            df_rL0Lmax_DEM,
                                            this_eta_DEM,
                                            Market0, P_eq_00)
    Pe0 <- equilib_list0[[1]]
    len_Pe0 <- length(Pe0)
    if(len_Pe0 > 1 | len_Pe0 == 0){
      if(len_Pe0 > 1){
        ind_keep <- which.max(Pe0)
        Pe0 <- Pe0[ind_keep]
        Qe0 <- equilib_list0[[2]][ind_keep]
        MktParticip_DEM0 <- equilib_list0[[3]][ind_keep]
        MktParticip_SUP0 <- equilib_list0[[4]][ind_keep]
        rL0_e_DEM0 <- equilib_list0[[5]]
        rLmax_e_DEM0 <- equilib_list0[[6]]
        rL0_e_SUP0 <- equilib_list0[[7]]
        rLmax_e_SUP0 <- equilib_list0[[8]]
        
        mu_r_DEM0 <- Pe0 / P_factryProduct * mu_factry_efficiency_inv
        mu_YDe_DEM0 <- exp(m_yCeil_factry) * NRyd_DEM(mu_r_DEM0, Pe0, l_credit = 0)
        mu_r_SUP0 <- Pe0 / P_factryProduct * mu_factry_efficiency_inv
        mu_YDe_SUP0 <- exp(m_yCeil_factry) * NRyd_SUP(mu_r_SUP0, Pe0, l_credit = 0)
        
      }
      if(len_Pe0 == 0){
        Pe0 <- NA
        Qe0 <- NA
        MktParticip_DEM0 <- NA
        MktParticip_SUP0 <- NA
        rL0_e_DEM0 <- equilib_list0[[5]]
        rLmax_e_DEM0 <- equilib_list0[[6]]
        rL0_e_SUP0 <- equilib_list0[[7]]
        rLmax_e_SUP0 <- equilib_list0[[8]]
        
        mu_r_DEM0 <- NA
        mu_YDe_DEM0 <- NA
        mu_r_SUP0 <- NA
        mu_YDe_SUP0 <- NA
        
      }
      
    }else{
      Qe0 <- equilib_list0[[2]]
      MktParticip_DEM0 <- equilib_list0[[3]]
      MktParticip_SUP0 <- equilib_list0[[4]]
      rL0_e_DEM0 <- equilib_list0[[5]]
      rLmax_e_DEM0 <- equilib_list0[[6]]
      rL0_e_SUP0 <- equilib_list0[[7]]
      rLmax_e_SUP0 <- equilib_list0[[8]]
      mu_r_DEM0 <- Pe0 / P_factryProduct * mu_factry_efficiency_inv
      mu_YDe_DEM0 <- exp(m_yCeil_factry) * NRyd_DEM(mu_r_DEM0, Pe0, l_credit = 0)
      mu_r_SUP0 <- Pe0 / P_factryProduct * mu_factry_efficiency_inv
      mu_YDe_SUP0 <- exp(m_yCeil_factry) * NRyd_SUP(mu_r_SUP0, Pe0, l_credit = 0)
      
    }
    
    df_Eq0 <- data.frame(Pe = Pe0, Qe = Qe0,
                         MktParticip_DEM = MktParticip_DEM0, MktParticip_SUP = MktParticip_SUP0, Tech = "Baseline")
    #print(df_Eq0)
    df_Eq0_r <- data.frame(rL0_e_DEM = rL0_e_DEM0, rLmax_e_DEM = rLmax_e_DEM0,
                           rL0_e_SUP = rL0_e_SUP0, rLmax_e_SUP = rLmax_e_SUP0, Tech = "Baseline")
    #print(df_Eq0_r)
    Market0 <- F
    equilib_list1 <- get_equilibrium_values(interval_P_feedstock,
                                            N_S = N_S,
                                            mu_cost_per_farmProduct = mu_cost_per_farmProduct_statQuo,
                                            cv_cost_per_farmProduct = cv_cost_per_farmProduct_statQuo,
                                            m_yCeil_farm = m_yCeil_farm,
                                            s2_yCeil_farm = s2_yCeil_farm,
                                            m_A_farm = m_A_farm,
                                            s2_A_farm = s2_A_farm,
                                            df_rL0Lmax_SUP,
                                            this_eta_SUP,
                                            N_D = N_D,
                                            P_factryProduct = P_factryProduct,
                                            mu_factry_efficiency_inv = mu_factry_efficiency_inv_statQuo,
                                            cv_factry_efficiency_inv = cv_factry_efficiency_inv_statQuo,
                                            m_yCeil_factry = m_yCeil_factry,
                                            s2_yCeil_factry = s2_yCeil_factry,
                                            m_A_factry = m_A_factry,
                                            s2_A_factry = s2_A_factry,
                                            df_rL0Lmax_DEM,
                                            this_eta_DEM,
                                            Market0, P_eq_00)
    
    Pe1 <- equilib_list1[[1]]
    print(paste("Pe1 =", Pe1))
    len_Pe1 <- length(Pe1)
    if(len_Pe1 > 1 | len_Pe1 == 0){
      if(len_Pe1 > 1){
        ind_keep <- which.max(Pe1)
        Pe1 <- Pe1[ind_keep]
        Qe1 <- equilib_list1[[2]][ind_keep]
        MktParticip_DEM1 <- equilib_list1[[3]][ind_keep]
        MktParticip_SUP1 <- equilib_list1[[4]][ind_keep]
        rL0_e_DEM1 <- equilib_list1[[5]]
        rLmax_e_DEM1 <- equilib_list1[[6]]
        rL0_e_SUP1 <- equilib_list1[[7]]
        rLmax_e_SUP1 <- equilib_list1[[8]]
        mu_r_DEM1 <- Pe1 / P_factryProduct * mu_factry_efficiency_inv
        mu_YDe_DEM1 <- exp(m_yCeil_factry) * NRyd_DEM(mu_r_DEM1, Pe1, l_credit = 0)
        mu_r_SUP1 <- Pe1 / P_factryProduct * mu_factry_efficiency_inv
        mu_YDe_SUP1 <- exp(m_yCeil_factry) * NRyd_SUP(mu_r_SUP1, Pe1, l_credit = 0)
        
      }
      if(len_Pe1 == 0){
        Pe1 <- NA
        Qe1 <- NA
        MktParticip_DEM1 <- NA
        MktParticip_SUP1 <- NA
        rL0_e_DEM1 <- equilib_list1[[5]]
        rLmax_e_DEM1 <- equilib_list1[[6]]
        rL0_e_SUP1 <- equilib_list1[[7]]
        rLmax_e_SUP1 <- equilib_list1[[8]]
        
        mu_r_DEM1 <- NA
        mu_YDe_DEM1 <- NA
        mu_r_SUP1 <- NA
        mu_YDe_SUP1 <- NA
        
      }
      
    }else{
      Qe1 <- equilib_list1[[2]]
      MktParticip_DEM1 <- equilib_list1[[3]]
      MktParticip_SUP1 <- equilib_list1[[4]]
      rL0_e_DEM1 <- equilib_list1[[5]]
      rLmax_e_DEM1 <- equilib_list1[[6]]
      rL0_e_SUP1 <- equilib_list1[[7]]
      rLmax_e_SUP1 <- equilib_list1[[8]]
      
      mu_r_DEM1 <- Pe1 / P_factryProduct * mu_factry_efficiency_inv
      mu_YDe_DEM1 <- exp(m_yCeil_factry) * NRyd_DEM(mu_r_DEM1, Pe1, l_credit = 0)
      mu_r_SUP1 <- Pe1 / P_factryProduct * mu_factry_efficiency_inv
      mu_YDe_SUP1 <- exp(m_yCeil_factry) * NRyd_SUP(mu_r_SUP1, Pe1, l_credit = 0)
      
    }
    
    df_Eq1 <- data.frame(Pe = Pe1, Qe = Qe1,
                         MktParticip_DEM = MktParticip_DEM1, MktParticip_SUP = MktParticip_SUP1, Tech = "Alternative")
    #print(df_Eq1)
    df_Eq1_r <- data.frame(rL0_e_DEM = rL0_e_DEM1, rLmax_e_DEM = rLmax_e_DEM1,
                           rL0_e_SUP = rL0_e_SUP1, rLmax_e_SUP = rLmax_e_SUP1, Tech = "Alternative")
    #print(df_Eq1_r)
    #---
    t <- t + 1
    df_Eq0_list[[t]] <- df_Eq0
    df_Eq0r_list[[t]] <- df_Eq0_r
    df_Eq1_list[[t]] <- df_Eq1
    df_Eq1r_list[[t]] <- df_Eq1_r

    
    mat_Pe0[k, l] <- Pe0
    mat_Qe0[k, l] <- Qe0
    mat_muYDe_SUP0[k, l] <- mu_YDe_SUP0
    mat_muYDe_DEM0[k, l] <- mu_YDe_DEM0
    mat_MktParticip_DEM0[k, l] <- MktParticip_DEM0
    mat_MktParticip_SUP0[k, l] <- MktParticip_SUP0

    mat_Pe1[k, l] <- Pe1
    mat_Qe1[k, l] <- Qe1
    mat_muYDe_SUP1[k, l] <- mu_YDe_SUP1
    mat_muYDe_DEM1[k, l] <- mu_YDe_DEM1
    mat_MktParticip_DEM1[k, l] <- MktParticip_DEM1
    mat_MktParticip_SUP1[k, l] <- MktParticip_SUP1
    
    
        
    print(c(k = k, l = l))
    
    
    
    
    

  }
}




#-----------------
xtick_labs <- 1 / mu_factry_efficiency_inv_statQuo * (1 + eta_vec)
ytick_labs <- mu_cost_per_farmProduct_statQuo * (1 + eta_vec)
mapPalette <- colorRampPalette(c("magenta", "cyan"))
mapPalette_inv <- colorRampPalette(c("cyan", "magenta"))
#-----------------

inMat <- mat_Pe1
surface <- list(x = xtick_labs,
                y = ytick_labs,
                z = inMat)
plot.surface(surface, type = "C",
             xlab = "Mean factory efficiency (kL Ethanol / MT Root)",
             ylab = "Mean farm cost (lcu / MT Root)", labcex = 1, col = mapPalette_inv(45))
title(main = "Alternative Market Equilibrium Price Map (lcu / MT)", cex.main = 1)

inMat <- mat_Qe1
surface <- list(x = xtick_labs,
                y = ytick_labs,
                z = inMat)
plot.surface(surface, type = "C",
             xlab = "Mean factory efficiency (kL Ethanol / MT Root)",
             ylab = "Mean farm cost (lcu / MT Root)", col = mapPalette(45))
title(main = "Alternative Market Equilibrium Quantity Map (MT / day)", cex.main = 1)

inMat <- mat_Pe0
surface <- list(x = xtick_labs,
                y = ytick_labs,
                z = inMat)
plot.surface(surface, type = "C",
             xlab = "Mean factory efficiency (kL Ethanol / MT Root)",
             ylab = "Mean farm cost (lcu / MT Root)", labcex = 1, col = mapPalette(45))
title(main = "Baseline Market Equilibrium Price Map (lcu / MT)", cex.main = 1)

inMat <- mat_Qe0
surface <- list(x = xtick_labs,
                y = ytick_labs,
                z = inMat)
plot.surface(surface, type = "C",
             xlab = "Mean factory efficiency (kL Ethanol / MT Root)",
             ylab = "Mean farm cost (lcu / MT Root)", labcex = 1, col = mapPalette(45))
title(main = "Baseline Market Equilibrium Quantity Map (MT / day)", cex.main = 1)


inMat <- mat_MktParticip_DEM0
surface <- list(x = xtick_labs,
                y = ytick_labs,
                z = inMat)
plotSurface2(surface, type = "C",
             xlab = "Mean factory efficiency (kL Ethanol / MT Root)",
             ylab = "Mean farm cost (lcu / MT Root)", labcex = 1, col = mapPalette(45), method = "edge")
title(main = "Baseline Demand Market Participation Map", cex.main = 1)


inMat <- mat_MktParticip_DEM1
surface <- list(x = xtick_labs,
                y = ytick_labs,
                z = inMat)
plotSurface2(surface, type = "C",
             xlab = "Mean factory efficiency (kL Ethanol / MT Root)",
             ylab = "Mean farm cost (lcu / MT Root)", labcex = 1, col = mapPalette(45), method = "edge")
title(main = "Alternative Demand Market Participation Map", cex.main = 1)


inMat <- mat_MktParticip_SUP0
surface <- list(x = xtick_labs,
                y = ytick_labs,
                z = inMat)
plotSurface2(surface, type = "C",
             xlab = "Mean factory efficiency (kL Ethanol / MT Root)",
             ylab = "Mean farm cost (lcu / MT Root)", labcex = 1, col = mapPalette(45), method = "edge")
title(main = "Baseline Supply Market Participation Map", cex.main = 1)


inMat <- mat_MktParticip_SUP1
surface <- list(x = xtick_labs,
                y = ytick_labs,
                z = inMat)
plot.surface(surface, type = "C",
             xlab = "Mean factory efficiency (kL Ethanol / MT Root)",
             ylab = "Mean farm cost (lcu / MT Root)", labcex = 1, col = mapPalette(45))
title(main = "Alternative Supply Market Participation Map", cex.main = 1)





inMat <- mat_muYDe_DEM0
surface <- list(x = xtick_labs,
                y = ytick_labs,
                z = inMat)
plotSurface2(surface, type = "C",
             xlab = "Mean factory efficiency (kL Ethanol / MT Root)",
             ylab = "Mean farm cost (lcu / MT Root)", labcex = 1, col = mapPalette(45), method = "edge")
title(main = "Baseline Mean Factory Net Revenue Map (lcu / day)", cex.main = 1)

inMat <- mat_muYDe_SUP0
surface <- list(x = xtick_labs,
                y = ytick_labs,
                z = inMat)
plotSurface2(surface, type = "C",
             xlab = "Mean factory efficiency (kL Ethanol / MT Root)",
             ylab = "Mean farm cost (lcu / MT Root)", labcex = 1, col = mapPalette(45), method = "edge")
title(main = "Baseline Mean Supply Net Revenue Map (lcu / ha.)", cex.main = 1)


inMat <- mat_muYDe_DEM1
surface <- list(x = xtick_labs,
                y = ytick_labs,
                z = inMat)
plotSurface2(surface, type = "C",
             xlab = "Mean factory efficiency (kL Ethanol / MT Root)",
             ylab = "Mean farm cost (lcu / MT Root)", labcex = 1, col = mapPalette(45), method = "edge")
title(main = "Alternative Mean Factory Net Revenue Map (lcu / day)", cex.main = 1)

inMat <- mat_muYDe_SUP1
surface <- list(x = xtick_labs,
                y = ytick_labs,
                z = inMat)
plotSurface2(surface, type = "C",
             xlab = "Mean factory efficiency (kL Ethanol / MT Root)",
             ylab = "Mean farm cost (lcu / MT Root)", labcex = 1, col = mapPalette(45), method = "edge")
title(main = "Alternative Mean Supply Net Revenue Map (lcu / ha.)", cex.main = 1)







































#----------------------------
# New tech demand curve
#----------------------------
df_QD1 <- Q_DorS(N = N_D,
                 P_input = P_feedstock,
                 P_output = P_factryProduct,
                 mu_beta = mu_factry_efficiency1_inv,
                 sig2_beta = sig2_factry_efficiency1_inv,
                 m_yCeil = m_yCeil_factry,
                 s2_yCeil = s2_yCeil_factry,
                 m_A = m_A_factry,
                 s2_A = s2_A_factry,
                 rL0 = r1_L0_vec_DEM, rLmax = r1_Lmax_vec_DEM,
                 l_credit = 0)
df_QD1$rAdopt <- rAdopt_vec_DEM
colnames(df_QD1)[1:2] <- c("Demand (MT)", "Demand Market Participation")
df_QD1$`Feedstock Price (lcu / MT)` <- P_feedstock
df_QD1$Tech <- "Alternative"
#----------------------------
# Old tech demand curve
#----------------------------
df_QD0 <- Q_DorS(N = N_D,
                 P_input = this_P,
                 P_output = P_factryProduct,
                 mu_beta = mu_factry_efficiency_inv,
                 sig2_beta = sig2_factry_efficiency_inv,
                 m_yCeil = m_yCeil_factry,
                 s2_yCeil = s2_yCeil_factry,
                 m_A = m_A_factry,
                 s2_A = s2_A_factry,
                 rL0 = r0_L0_vec_DEM, rLmax = r0_Lmax_vec_DEM,
                 l_credit = 0)
df_QD0$rAdopt <- 1 - rAdopt_vec_DEM
colnames(df_QD0)[1:2] <- c("Demand (MT)", "Demand Market Participation")
df_QD0$`Feedstock Price (lcu / MT)` <- P_feedstock
df_QD0$Tech <- "Baseline"
#----------------------------
# New tech supply curve
#----------------------------
df_QS1 <- Q_DorS(N = N_S,
                 P_input = 1,
                 P_output = this_P,
                 mu_beta = mu_cost_per_farmProduct1,
                 sig2_beta = sig2_cost_per_farmProduct1,
                 m_yCeil = m_yCeil_farm,
                 s2_yCeil = s2_yCeil_farm,
                 m_A = m_A_farm,
                 s2_A = s2_A_farm,
                 rL0 = r1_L0_vec_SUP, rLmax = r1_Lmax_vec_SUP,
                 l_credit = 0)
df_QS1$rAdopt <- rAdopt_vec_SUP
colnames(df_QS1)[1:2] <- c("Supply (MT)", "Supply Market Participation")
df_QS1$`Feedstock Price (lcu / MT)` <- P_feedstock
df_QS1$Tech <- "Alternative"
#----------------------------
# Old tech supply curve
#----------------------------
df_QS0 <- Q_DorS(N = N_S,
                 P_input = 1,
                 P_output = this_P,
                 mu_beta = mu_cost_per_farmProduct,
                 sig2_beta = sig2_cost_per_farmProduct,
                 m_yCeil = m_yCeil_farm,
                 s2_yCeil = s2_yCeil_farm,
                 m_A = m_A_farm,
                 s2_A = s2_A_farm,
                 rL0 = r0_L0_vec_SUP, rLmax = r0_Lmax_vec_SUP,
                 l_credit = 0)
df_QS0$rAdopt <- 1 - rAdopt_vec_SUP
colnames(df_QS0)[1:2] <- c("Supply (MT)", "Supply Market Participation")
df_QS0$`Feedstock Price (lcu / MT)` <- P_feedstock
df_QS0$Tech <- "Baseline"
#----------------------------
df_QD <- rbind(df_QD0, df_QD1)
df_QS <- rbind(df_QS0, df_QS1)









































































for(k in 1:n){
  #k = 2
  #this_eta_DEM <- 0.2
  this_eta_DEM <- eta_vec[k]
  #====================================
  # Baseline and alternative demand
  #----------------------------------
  dfQD1_list <- list()
  dfQD0_list <- list()
  # Demand
  for(i in 1:length(P_feedstock)){
    this_P <- P_feedstock[i]
    P1 <- this_P
    # Get r range
    chng_DEM <- 1 + this_eta_DEM
    out_list <- get_r0r1Range_DEM(interval_r, P0, P1, chng_DEM)
    r0_range <- out_list[[1]]
    r1_range <- out_list[[2]]
    rAdopt <- out_list[[3]]
    r0_Lmax <- r0_range[1]
    r0_L0 <- r0_range[2]
    r1_Lmax <- r1_range[1]
    r1_L0 <- r1_range[2]
    #--
    # df_x <- data.frame(this_P, r0_Lmax, r0_L0, r1_Lmax, r1_L0)
    # print(df_x)
    #----------------------------
    # New tech demand curve
    #----------------------------
    #mu_factry_efficiency_inv1 <- mu_factry_efficiency_inv * chng_DEM
    this_mu_factry_efficiency_inv <- 1 / mu_factry_efficiency_inv * chng_DEM
    mu_factry_efficiency_inv1 <- 1 / this_mu_factry_efficiency_inv
    sig2_factry_efficiency_inv1 <- (cv_factry_efficiency_inv * mu_factry_efficiency_inv1)^2
    df_QD1 <- Q_DorS(N = N_D,
                     P_input = this_P,
                     P_output = P_factryProduct,
                     mu_beta = mu_factry_efficiency_inv1,
                     sig2_beta = sig2_factry_efficiency_inv1,
                     m_yCeil = m_yCeil_factry,
                     s2_yCeil = s2_yCeil_factry,
                     m_A = m_A_factry,
                     s2_A = s2_A_factry,
                     rL0 = r1_L0, rLmax = r1_Lmax,
                     l_credit = 0)
    df_QD1$rAdopt <- rAdopt
    dfQD1_list[[i]] <- df_QD1
    #----------------------------
    # Old tech demand curve
    #----------------------------
    df_QD0 <- Q_DorS(N = N_D,
                     P_input = this_P,
                     P_output = P_factryProduct,
                     mu_beta = mu_factry_efficiency_inv,
                     sig2_beta = sig2_factry_efficiency_inv,
                     m_yCeil = m_yCeil_factry,
                     s2_yCeil = s2_yCeil_factry,
                     m_A = m_A_factry,
                     s2_A = s2_A_factry,
                     rL0 = r0_L0, rLmax = r0_Lmax,
                     l_credit = 0)
    df_QD0$rAdopt <- 1 - rAdopt
    dfQD0_list[[i]] <- df_QD0
  }
  df_QD1 <- do.call(rbind, dfQD1_list)
  df_QD0 <- do.call(rbind, dfQD0_list)
  colnames(df_QD0)[1:2] <- c("Demand (MT)", "Demand Market Participation")
  df_QD0$`Feedstock Price (lcu / MT)` <- P_feedstock
  df_QD0$Tech <- "Baseline"
  colnames(df_QD1)[1:2] <- c("Demand (MT)", "Demand Market Participation")
  df_QD1$`Feedstock Price (lcu / MT)` <- P_feedstock
  df_QD1$Tech <- "Alternative"
  df_QD <- rbind(df_QD0, df_QD1)
  #====================================
  df_QSQD_new_list <- list()
  Pe0_vec <- c()
  Pe1_vec <- c()
  for(l in 1:n){
    #l = 5
    #this_eta_SUP <- -0.1
    this_eta_SUP <- eta_vec[l]
    this_eta_SUP
    #====================================
    # Baseline and alternative supply
    #----------------------------------
    dfQS1_list <- list()
    dfQS0_list <- list()
    chng_SUP <- 1 + this_eta_SUP
    P0 <- Pe00
    for(i in 1:length(P_feedstock)){
      this_P <- P_feedstock[i]
      # Get r range
      P1 <- this_P
      out_list <- get_r0r1Range_SUP(interval_r, P0, P1, chng_SUP)
      r0_range <- out_list[[1]]
      r1_range <- out_list[[2]]
      rAdopt <- out_list[[3]]
      r0_Lmax <- r0_range[1]
      r0_L0 <- r0_range[2]
      r1_Lmax <- r1_range[1]
      r1_L0 <- r1_range[2]
      #--
      # df_x <- data.frame(this_P, r0_Lmax, r0_L0, r1_Lmax, r1_L0)
      # print(df_x)
      #----------------------------
      # New tech supply curve
      #----------------------------
      mu_cost_per_farmProduct1 <- mu_cost_per_farmProduct * chng_SUP
      sig2_cost_per_farmProduct1 <- (cv_cost_per_farmProduct * mu_cost_per_farmProduct1)^2
      
      df_QS1 <- Q_DorS(N = N_S,
                       P_input = 1,
                       P_output = this_P,
                       mu_beta = mu_cost_per_farmProduct1,
                       sig2_beta = sig2_cost_per_farmProduct1,
                       m_yCeil = m_yCeil_farm,
                       s2_yCeil = s2_yCeil_farm,
                       m_A = m_A_farm,
                       s2_A = s2_A_farm,
                       rL0 = r1_L0, rLmax = r1_Lmax,
                       l_credit = 0)
      df_QS1$rAdopt <- rAdopt
      dfQS1_list[[i]] <- df_QS1
      #----------------------------
      # Old tech supply curve
      #----------------------------
      df_QS0 <- Q_DorS(N = N_S,
                       P_input = 1,
                       P_output = this_P,
                       mu_beta = mu_cost_per_farmProduct,
                       sig2_beta = sig2_cost_per_farmProduct,
                       m_yCeil = m_yCeil_farm,
                       s2_yCeil = s2_yCeil_farm,
                       m_A = m_A_farm,
                       s2_A = s2_A_farm,
                       rL0 = r0_L0, rLmax = r0_Lmax,
                       l_credit = 0)
      df_QS0$rAdopt <- 1 - rAdopt
      dfQS0_list[[i]] <- df_QS0
    }
    df_QS1 <- do.call(rbind, dfQS1_list)
    df_QS0 <- do.call(rbind, dfQS0_list)
    colnames(df_QS0)[1:2] <- c("Supply (MT)", "Supply Market Participation")
    df_QS0$`Feedstock Price (lcu / MT)` <- P_feedstock
    df_QS0$Tech <- "Baseline"
    colnames(df_QS1)[1:2] <- c("Supply (MT)", "Supply Market Participation")
    df_QS1$`Feedstock Price (lcu / MT)` <- P_feedstock
    df_QS1$Tech <- "Alternative"
    
    df_QS <- rbind(df_QS0, df_QS1)
    #====================================
    #====================================
    #====================================
    #====================================
    #====================================
    #====================================
    # Demand and supply of baseline and alternative together
    # (The market)
    # Find new equilibrium price(s)
    # Equilibrium price, quantity, etc. in baseline market
    #------------------------------
    #plot(df_QD0$`Demand (MT)` - df_QS0$`Supply (MT)`)
    #plot(df_QD0$`Demand (MT)`)
    plot(df_QS0$`Supply (MT)`)
    d0 <- df_QD0$`Demand (MT)` - df_QS0$`Supply (MT)`
    d0_abs <- abs(d0)
    min_d0_abs <- min(d0_abs[-c(1:100)])
    ind_Pe0 <- which(d0_abs == min_d0_abs)
    # df_QS0$`Feedstock Price (lcu / MT)`[ind_Pe0]
    # df_QS0$`Supply (MT)`[ind_Pe0]
    if(min_d0_abs > 100){ind_Pe0 <- NA}
    MktParticip0_DEM_test <- df_QD0$`Demand Market Participation`[ind_Pe0]
    MktParticip0_SUP_test <- df_QS0$`Supply Market Participation`[ind_Pe0]
    #------------------------------
    if(is.na(MktParticip0_DEM_test) | is.na(MktParticip0_SUP_test)){
      df_Pe0 <- data.frame(Pe = NA, Qe = NA, rAdopt_DEM = NA, rAdopt_SUP = NA,
                           MktParticip_DEM = NA, MktParticip_SUP = NA, Tech = "Baseline")
      MktParticip0_DEM <- NA
      MktParticip0_SUP <- NA
    }else{
      
      Pe0_rough <- P_feedstock[ind_Pe0]
      Pe0_neighborhood  <- seq(Pe0_rough - 50, Pe0_rough + 50, 1)
      dfQD0precise_list <- list()
      dfQS0precise_list <- list()
      P0 <- Pe00
      for(j in 1:length(Pe0_neighborhood)){
        this_P <- Pe0_neighborhood[j]
        P1 <- this_P
        interval_r <- c(rvec[1], rvec[length(rvec)])
        out_list <- get_r0r1Range_DEM(interval_r, P0, P1, chng_DEM)
        r0_range <- out_list[[1]]
        r1_range <- out_list[[2]]
        rAdopt <- out_list[[3]]
        r0_Lmax <- r0_range[1]
        r0_L0 <- r0_range[2]
        r1_Lmax <- r1_range[1]
        r1_L0 <- r1_range[2]
        df_QD0_precise <- Q_DorS(N = N_D, P_input = this_P,
                                 P_output = P_factryProduct,
                                 mu_beta = mu_factry_efficiency_inv,
                                 sig2_beta = sig2_factry_efficiency_inv,
                                 m_yCeil = m_yCeil_factry,
                                 s2_yCeil = s2_yCeil_factry,
                                 m_A = m_A_factry,
                                 s2_A = s2_A_factry,
                                 rL0 = r0_L0, rLmax = r0_Lmax,
                                 l_credit = 0)
        df_QD0_precise$rAdopt <- 1 - rAdopt
        dfQD0precise_list[[j]] <- df_QD0_precise
        #--
        out_list <- get_r0r1Range_SUP(interval_r, P0, P1, chng_SUP)
        r0_range <- out_list[[1]]
        r1_range <- out_list[[2]]
        rAdopt <- out_list[[3]]
        r0_Lmax <- r0_range[1]
        r0_L0 <- r0_range[2]
        r1_Lmax <- r1_range[1]
        r1_L0 <- r1_range[2]
        df_QS0_precise <- Q_DorS(N = N_S, P_input = 1,
                                 P_output = this_P,
                                 mu_beta = mu_cost_per_farmProduct,
                                 sig2_beta = sig2_cost_per_farmProduct,
                                 m_yCeil = m_yCeil_farm,
                                 s2_yCeil = s2_yCeil_farm,
                                 m_A = m_A_farm, s2_A = s2_A_farm,
                                 rL0 = r0_L0, rLmax = r0_Lmax,
                                 l_credit = 0)
        df_QS0_precise$rAdopt <- 1 - rAdopt
        dfQS0precise_list[[j]] <- df_QS0_precise
        
      }
      df_QD0_precise <- do.call(rbind, dfQD0precise_list)
      df_QS0_precise <- do.call(rbind, dfQS0precise_list)
      colnames(df_QD0_precise)[1:2] <- c("Demand (MT)", "Demand Market Participation")
      colnames(df_QS0_precise)[1:2] <- c("Supply (MT)", "Supply Market Participation")
      df_QD0_precise$`Feedstock Price (lcu / MT)` <- Pe0_neighborhood
      df_QS0_precise$`Feedstock Price (lcu / MT)` <- Pe0_neighborhood
      d <- df_QS0_precise$`Supply (MT)` - df_QD0_precise$`Demand (MT)`
      d_abs <- abs(d)
      min_d_abs <- min(d_abs)
      ind_Pe0 <- which.min(d_abs)
      Pe0 <- Pe0_neighborhood[ind_Pe0]
      Qe0 <- df_QS0_precise$`Supply (MT)`[ind_Pe0]
      rAdopt0_SUP <- df_QS0_precise$rAdopt[ind_Pe0]
      rAdopt0_DEM <- df_QD0_precise$rAdopt[ind_Pe0]
      MktParticip0_DEM <- df_QD0_precise$`Demand Market Participation`[ind_Pe0]
      MktParticip0_SUP <- df_QS0_precise$`Supply Market Participation`[ind_Pe0]
      df_Pe0 <- data.frame(Pe = Pe0, Qe = Qe0,
                           rAdopt_DEM = rAdopt0_DEM, rAdopt_SUP = rAdopt0_DEM,
                           MktParticip_DEM = MktParticip0_DEM,
                           MktParticip_SUP = MktParticip0_SUP,
                           Tech = "Baseline")
    }
    #==============================
    # Equilibrium price, quantity, etc. in alternative market
    d1 <- df_QS1$`Supply (MT)` - df_QD1$`Demand (MT)`
    #plot(df_QS1$`Supply (MT)`)
    #plot(df_QD1$`Demand (MT)`)
    d1_abs <- abs(d1)
    min_d1_abs <- min(d1_abs)
    ind_Pe1 <- which.min(d1_abs)
    #df_QS1$`Feedstock Price (lcu / MT)`[ind_Pe1]
    if(min_d1_abs > 100){ind_Pe1 <- NA}
    MktParticip1_DEM_test <- df_QD1$`Demand Market Participation`[ind_Pe1]
    MktParticip1_SUP_test <- df_QS1$`Supply Market Participation`[ind_Pe1]
    #------------------------------
    if(is.na(MktParticip1_DEM_test) | is.na(MktParticip1_SUP_test)){
      df_Pe1 <- data.frame(Pe = NA, Qe = NA, rAdopt_DEM = NA, rAdopt_SUP = NA,
                           MktParticip_DEM = NA, MktParticip_SUP = NA, Tech = "Alternative")
      MktParticip1_DEM <- NA
      MktParticip1_SUP <- NA
      
    }else{
      Pe1_rough <- P_feedstock[ind_Pe1]
      Pe1_neighborhood  <- seq(Pe1_rough - 50, Pe1_rough + 50, 1)
      dfQD1precise_list <- list()
      dfQS1precise_list <- list()
      P0 <- Pe00
      for(j in 1:length(Pe1_neighborhood)){
        this_P <- Pe1_neighborhood[j]
        P1 <- this_P
        interval_r <- c(rvec[1], rvec[length(rvec)])
        out_list <- get_r0r1Range_DEM(interval_r, P0, P1, chng_DEM)
        r0_range <- out_list[[1]]
        r1_range <- out_list[[2]]
        rAdopt <- out_list[[3]]
        r0_Lmax <- r0_range[1]
        r0_L0 <- r0_range[2]
        r1_Lmax <- r1_range[1]
        r1_L0 <- r1_range[2]
        df_QD1_precise <- Q_DorS(N = N_D, P_input = this_P,
                                 P_output = P_factryProduct,
                                 mu_beta = mu_factry_efficiency_inv1,
                                 sig2_beta = sig2_factry_efficiency_inv1,
                                 m_yCeil = m_yCeil_factry,
                                 s2_yCeil = s2_yCeil_factry,
                                 m_A = m_A_factry,
                                 s2_A = s2_A_factry,
                                 rL0 = r1_L0, rLmax = r1_Lmax,
                                 l_credit = 0)
        df_QD1_precise$rAdopt <- rAdopt
        dfQD1precise_list[[j]] <- df_QD1_precise
        #--
        out_list <- get_r0r1Range_SUP(interval_r, P0, P1, chng_SUP)
        r0_range <- out_list[[1]]
        r1_range <- out_list[[2]]
        rAdopt <- out_list[[3]]
        r0_Lmax <- r0_range[1]
        r0_L0 <- r0_range[2]
        r1_Lmax <- r1_range[1]
        r1_L0 <- r1_range[2]
        df_QS1_precise <- Q_DorS(N = N_S, P_input = 1,
                                 P_output = this_P,
                                 mu_beta = mu_cost_per_farmProduct1,
                                 sig2_beta = sig2_cost_per_farmProduct1,
                                 m_yCeil = m_yCeil_farm,
                                 s2_yCeil = s2_yCeil_farm,
                                 m_A = m_A_farm, s2_A = s2_A_farm,
                                 rL0 = r1_L0, rLmax = r1_Lmax,
                                 l_credit = 0)
        df_QS1_precise$rAdopt <- rAdopt
        dfQS1precise_list[[j]] <- df_QS1_precise
        
      }
      df_QD1_precise <- do.call(rbind, dfQD1precise_list)
      df_QS1_precise <- do.call(rbind, dfQS1precise_list)
      colnames(df_QD1_precise)[1:2] <- c("Demand (MT)", "Demand Market Participation")
      colnames(df_QS1_precise)[1:2] <- c("Supply (MT)", "Supply Market Participation")
      df_QD1_precise$`Feedstock Price (lcu / MT)` <- Pe1_neighborhood
      df_QS1_precise$`Feedstock Price (lcu / MT)` <- Pe1_neighborhood
      d <- df_QS1_precise$`Supply (MT)` - df_QD1_precise$`Demand (MT)`
      d_abs <- abs(d)
      min_d_abs <- min(d_abs)
      ind_Pe1 <- which.min(d_abs)
      Pe1 <- Pe1_neighborhood[ind_Pe1]
      Qe1 <- df_QS1_precise$`Supply (MT)`[ind_Pe1]
      rAdopt1_DEM <- df_QD1_precise$rAdopt[ind_Pe1]
      rAdopt1_SUP <- df_QS1_precise$rAdopt[ind_Pe1]
      MktParticip1_DEM <- df_QD1_precise$`Demand Market Participation`[ind_Pe1]
      MktParticip1_SUP <- df_QS1_precise$`Supply Market Participation`[ind_Pe1]
      df_Pe1 <- data.frame(Pe = Pe1, Qe = Qe1,
                           rAdopt_DEM = rAdopt1_DEM, rAdopt_SUP = rAdopt1_SUP,
                           MktParticip_DEM = MktParticip1_DEM,
                           MktParticip_SUP = MktParticip1_SUP,
                           Tech = "Alternative")
    }
    
    df_Pe_new <- rbind(df_Pe00, df_Pe0, df_Pe1)
    df_Pe_new$eta_farm <- this_eta_SUP
    df_Pe_new$eta_factry <- this_eta_DEM
    print(df_Pe_new)
    t <- t + 1
    df_Pe_new_list[[t]] <- df_Pe_new
    print(c(l = l, k = k))
    
    
    df_QS_new <- df_QS[, -c(2, 3)]
    df_QD_new <- df_QD[, -c(2, 3)]
    df_QS_new$Type <- paste(df_QS_new$Tech, "Supply", this_eta_SUP)
    colnames(df_QS_new)[1] <- "Quantity (MT)"
    df_QS_new$Tech <- NULL
    df_QD_new$Type <- paste(df_QD_new$Tech, "Demand", this_eta_DEM)
    colnames(df_QD_new)[1] <- "Quantity (MT)"
    df_QD_new$Tech <- NULL
    df_QSQD_new <- rbind(df_QS_new, df_QD_new)
    df_QSQD_new_list[[l]] <- df_QSQD_new
    
    #--------------------------------------
    # Baseline and Alternative Market Graphs
    #--------------------------------------
    turn_on <- F
    if(turn_on == T){
      ind_Mkt_alt <- grep("Alternative", df_QSQD_new$Type)
      ind_Mkt_base <- grep("Baseline", df_QSQD_new$Type)
      df_Mkt_alt <- df_QSQD_new[ind_Mkt_alt, ]
      df_Mkt_base <- df_QSQD_new[ind_Mkt_base, ]
      df_plot <- df_Mkt_alt
      df_plot$`Feedstock Price (lcu / MT)`[which(df_plot$`Quantity (MT)` == 0)] <- NA
      gg <- ggplot(df_plot, aes(x = `Feedstock Price (lcu / MT)`, y = `Quantity (MT)`, group = Type, color = Type))
      gg <- gg + geom_line(lwd = 2)
      gg <- gg + geom_vline(xintercept = Pe00, linetype = "dashed")
      if(!(is.na(df_Pe1$Pe))){gg <- gg + geom_vline(xintercept = df_Pe1$Pe, linetype = "dashed", color = "green")}
      gg <- gg + theme(legend.title = element_blank())
      print(gg)
      
      df_plot <- df_Mkt_base
      df_plot$`Feedstock Price (lcu / MT)`[which(df_plot$`Quantity (MT)` == 0)] <- NA
      gg <- ggplot(df_plot, aes(x = `Feedstock Price (lcu / MT)`, y = `Quantity (MT)`, group = Type, color = Type))
      gg <- gg + geom_line(lwd = 2)
      gg <- gg + geom_vline(xintercept = Pe00, linetype = "dashed")
      if(!(is.na(df_Pe0$Pe))){gg <- gg + geom_vline(xintercept = df_Pe0$Pe, linetype = "dashed", color = "green")}
      gg <- gg + theme(legend.title = element_blank())
      print(gg)
      #Sys.sleep((1))
      
      # df_QS_wide <- df_QS[, -c(2, 3)]
      # df_QS_wide <- df_QS_wide %>% spread(Tech, `Supply (MT)`)
      # df_QS_wide$`Composite Supply (MT)` <- df_QS_wide$Alternative + df_QS_wide$Baseline
      # u <- df_QS$Tech
      # df_QS_wide$`Supply Market Participation`[u == "Alternative"]
      # df_QS_wide$Share[is.na(df_QS_wide$Share)] <- 0
      # df_QS_wide$`Alternative Share` <- df_QS_wide$`Supply Market Participation`[u == "Alternative"] / (df_QS$`Supply Market Participation`[u == "Alternative"] + df_QS$`Supply Market Participation`[u == "Baseline"])
      # df_plot <- df_QS_wide
      #  
      # df_plot$Share[is.na(df_plot$Share)] <- 0
      # 
      # gg <- ggplot(df_plot, aes(x = `Feedstock Price (lcu / MT)`, y = `Composite Supply (MT)`, color = `Alternative Share`))
      # gg <- gg + geom_point()
      # gg
      # gg <- gg + geom_vline(xintercept = Pe00, linetype = "dashed")
      # if(!(is.na(df_Pe1$Pe))){gg <- gg + geom_vline(xintercept = df_Pe1$Pe, linetype = "dashed", color = "green")}
      # if(!(is.na(df_Pe0$Pe))){gg <- gg + geom_vline(xintercept = df_Pe0$Pe, linetype = "dashed", color = "green")}
      # gg <- gg + theme(legend.title = element_blank())
      # gg
      #print(df_Pe_new)
      #----------------------------
      # Supply side graphs comparing baseline and alternative
      #----------------------------
      df_plot <- df_QS
      df_plot$`Feedstock Price (lcu / MT)`[which(df_plot$`Supply (MT)` == 0)] <- NA
      gg <- ggplot(df_plot, aes(x = `Feedstock Price (lcu / MT)`, y = `Supply (MT)`, group = Tech, color = Tech))
      gg <- gg + geom_line(lwd = 2)
      gg <- gg + geom_vline(xintercept = Pe00, linetype = "dashed")
      print(gg)
      
      df_Sparticip <- df_QS[, -c(1, 3)]
      df_Sparticip$`Supply Market Participation` <- df_Sparticip$`Supply Market Participation`
      df_Sparticip$`Supply Market Participation`[which(is.na(df_Sparticip$`Supply Market Participation`))] <- 0
      df_Sparticip <- df_Sparticip %>% spread(Tech, `Supply Market Participation`)
      df_Sparticip$Both <- df_Sparticip$Alternative + df_Sparticip$Baseline
      df_Sparticip <- df_Sparticip %>% gather(Tech, `Supply Market Participation`, Alternative:Both)
      df_plot <- df_Sparticip
      
      # gg <- ggplot(df_plot, aes(x = `Feedstock Price (lcu / MT)`, y = `Supply Market Participation`, fill = Tech))
      # gg <- gg + geom_area(position = 'stack')
      # gg <- gg + geom_vline(xintercept = Pe00, linetype = "dashed")
      # gg
      
      gg <- ggplot(df_plot, aes(x = `Feedstock Price (lcu / MT)`, y = `Supply Market Participation`, group = Tech, color = Tech))
      gg <- gg + geom_line(lwd = 2)
      gg <- gg + geom_vline(xintercept = Pe00, linetype = "dashed")
      gg
      #----------------------------
      # Demand side graphs comparing baseline and alternative
      #----------------------------
      df_plot <- df_QD
      df_plot$`Demand (MT)`[which(df_plot$`Demand (MT)` == 0)] <- NA
      gg <- ggplot(df_plot, aes(x = `Feedstock Price (lcu / MT)`, y = `Demand (MT)`, group = Tech, color = Tech))
      gg <- gg + geom_line(lwd = 2)
      gg <- gg + geom_vline(xintercept = Pe00, linetype = "dashed")
      gg
      
      df_Dparticip <- df_QD[, -c(1, 3)]
      # df_Dparticip$`Demand Market Participation`[which(is.na(df_Dparticip$`Demand Market Participation`))] <- 0
      # df_Dparticip <- df_Dparticip %>% spread(Tech, `Demand Market Participation`)
      # df_Dparticip$Both <- df_Dparticip$Alternative + df_Dparticip$Baseline
      # df_Dparticip <- df_Dparticip %>% gather(Tech, `Demand Market Participation`, Alternative:Both)
      df_plot <- df_Dparticip
      gg <- ggplot(df_plot, aes(x = `Feedstock Price (lcu / MT)`, y = `Demand Market Participation`, group = Tech, color = Tech))
      gg <- gg + geom_line(lwd = 2)
      gg <- gg + geom_vline(xintercept = Pe00, linetype = "dashed")
      gg
      #----------------------------
      
      
    }
    #--------------------------------------
    #======================================
    # Alternative market mean net revenue (yield)
    if(!(is.na(df_Pe1$Pe))){
      # Demand side:
      mu_r_DEM1 <- df_Pe1$Pe / P_factryProduct * mu_factry_efficiency_inv * chng_DEM
      mu_YDe_DEM1 <- exp(m_yCeil_factry) * NRyd_DEM(mu_r_DEM1, df_Pe1$Pe, l_credit = 0)
      # Supply side:
      mu_r_SUP1 <- 1 / df_Pe1$Pe * mu_cost_per_farmProduct * chng_SUP
      mu_YDe_SUP1 <- exp(m_yCeil_farm) * NRyd_SUP(mu_r_SUP1, df_Pe1$Pe, l_credit = 0)
      mat_Pe1[k, l] <- df_Pe1$Pe
      mat_Qe1[k, l] <- df_Pe1$Qe
      
    }else{
      mu_YDe_DEM1 <- NA
      mu_YDe_SUP1 <- NA
      mat_Pe1[k, l] <- NA
      mat_Qe1[k, l] <- NA
      
    }
    
    
    if(!(is.na(df_Pe0$Pe))){
      # Demand side:
      mu_r_DEM0 <- df_Pe0$Pe / P_factryProduct * mu_factry_efficiency_inv * chng_DEM
      mu_YDe_DEM0 <- exp(m_yCeil_factry) * NRyd_DEM(mu_r_DEM1, df_Pe0$Pe, l_credit = 0)
      # Supply side:
      mu_r_SUP0 <- 1 / df_Pe0$Pe * mu_cost_per_farmProduct * chng_SUP
      mu_YDe_SUP0 <- exp(m_yCeil_farm) * NRyd_SUP(mu_r_SUP0, df_Pe0$Pe, l_credit = 0)
      mat_Pe0[k, l] <- df_Pe0$Pe
      mat_Qe0[k, l] <- df_Pe0$Qe
      
    }else{
      mu_YDe_DEM0 <- NA
      mu_YDe_SUP0 <- NA
      mat_Pe0[k, l] <- NA
      mat_Qe0[k, l] <- NA
      
    }
    
    if(is.na(df_Pe1$Pe) & is.na(df_Pe0$Pe)){
      # Demand side:
      mu_YDe_DEM0 <- mu_YDe_DEM00
      # Supply side:
      mu_YDe_SUP0 <- mu_YDe_SUP00
      mat_Pe0[k, l] <- df_Pe00$Pe
      mat_Qe0[k, l] <- df_Pe00$Qe
    }
    
    
    #====================================
    mat_muYDe_DEM0[k, l] <- mu_YDe_DEM0
    mat_muYDe_SUP0[k, l] <- mu_YDe_SUP0
    mat_muYDe_DEM1[k, l] <- mu_YDe_DEM1
    mat_muYDe_SUP1[k, l] <- mu_YDe_SUP1
    
    mat_MktParticip_DEM1[k, l] <- MktParticip1_DEM
    mat_MktParticip_SUP1[k, l] <- MktParticip1_SUP
    mat_MktParticip_DEM0[k, l] <- MktParticip0_DEM
    mat_MktParticip_SUP0[k, l] <- MktParticip0_SUP
    
    
    df_QSQD_new_list[[l]] <- df_QSQD_new
    Pe0_vec[l]  <- df_Pe0$Pe
    Pe1_vec[l]  <- df_Pe1$Pe
    
  }
  print(Pe0_vec)
  print(Pe1_vec)
  df_Pe0
  df_Pe1
  # Graph market for this demand curve
  graphDEMSUP <- F
  #----------------------------
  if(graphDEMSUP == T){
    df_QSQD_plot <- do.call(rbind, df_QSQD_new_list)
    df_QSQD_plot$`Quantity (MT)`[which(df_QSQD_plot$`Quantity (MT)` == 0)] <- NA
    ind_Type0 <- grep("Baseline", df_QSQD_plot$Type)
    ind_Type1 <- grep("Alternative", df_QSQD_plot$Type)
    df_QSQD0_plot <- df_QSQD_plot[ind_Type0, ]
    df_QSQD1_plot <- df_QSQD_plot[ind_Type1, ]
    
    gg <- ggplot(df_QSQD0_plot, aes(x = `Feedstock Price (lcu / MT)`, y = `Quantity (MT)`, group = Type, color = Type))
    gg <- gg + geom_line(lwd = 2)
    gg <- gg + geom_vline(xintercept = Pe00, linetype = "dashed")
    if(sum(is.na(Pe0_vec)) != n){gg <- gg + geom_vline(xintercept = Pe0_vec, linetype = "dashed")}
    gg
    
    gg <- ggplot(df_QSQD1_plot, aes(x = `Feedstock Price (lcu / MT)`, y = `Quantity (MT)`, group = Type, color = Type))
    gg <- gg + geom_line(lwd = 2)
    gg <- gg + geom_vline(xintercept = Pe00, linetype = "dashed")
    if(sum(is.na(Pe1_vec)) != n){gg <- gg + geom_vline(xintercept = Pe1_vec, linetype = "dashed")}
    gg
    
    #rm(df_QSQD_plot, df_QSQD_new_list)
    
  } 
  #----------------------------
}

df_Pe_new <- do.call(rbind, df_Pe_new_list)
#write.csv(df_Pe_new, "DEPEM table.csv")



















